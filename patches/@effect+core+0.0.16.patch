diff --git a/node_modules/@effect/core/package.json b/node_modules/@effect/core/package.json
index 104a4f2..f56919e 100644
--- a/node_modules/@effect/core/package.json
+++ b/node_modules/@effect/core/package.json
@@ -22,6 +22,86 @@
         "default": "./index.js"
       }
     },
+    "./io/Layer": {
+      "import": {
+        "types": "./io/Layer.d.ts",
+        "default": "./_mjs/io/Layer.mjs"
+      },
+      "require": {
+        "types": "./io/Layer.d.ts",
+        "default": "./io/Layer.js"
+      }
+    },
+    "./io/Effect": {
+      "import": {
+        "types": "./io/Effect.d.ts",
+        "default": "./_mjs/io/Effect.mjs"
+      },
+      "require": {
+        "types": "./io/Effect.d.ts",
+        "default": "./io/Effect.js"
+      }
+    },
+    "./io/Exit": {
+      "import": {
+        "types": "./io/Exit.d.ts",
+        "default": "./_mjs/io/Exit.mjs"
+      },
+      "require": {
+        "types": "./io/Exit.d.ts",
+        "default": "./io/Exit.js"
+      }
+    },
+    "./io/Cause": {
+      "import": {
+        "types": "./io/Cause.d.ts",
+        "default": "./_mjs/io/Cause.mjs"
+      },
+      "require": {
+        "types": "./io/Cause.d.ts",
+        "default": "./io/Cause.js"
+      }
+    },
+    "./io/Fiber": {
+      "import": {
+        "types": "./io/Fiber.d.ts",
+        "default": "./_mjs/io/Fiber.mjs"
+      },
+      "require": {
+        "types": "./io/Fiber.d.ts",
+        "default": "./io/Fiber.js"
+      }
+    },
+    "./io/FiberRef": {
+      "import": {
+        "types": "./io/FiberRef.d.ts",
+        "default": "./_mjs/io/FiberRef.mjs"
+      },
+      "require": {
+        "types": "./io/FiberRef.d.ts",
+        "default": "./io/FiberRef.js"
+      }
+    },
+    "./io/Scope": {
+      "import": {
+        "types": "./io/Scope.d.ts",
+        "default": "./_mjs/io/Scope.mjs"
+      },
+      "require": {
+        "types": "./io/Scope.d.ts",
+        "default": "./io/Scope.js"
+      }
+    },
+    "./*.js": {
+      "import": {
+        "types": "./*.d.ts",
+        "default": "./_mjs/*.mjs"
+      },
+      "require": {
+        "types": "./*.d.ts",
+        "default": "./*.js"
+      }
+    },
     "./*": {
       "import": {
         "types": "./*.d.ts",
diff --git a/node_modules/@effect/core/tsconfig.base.json b/node_modules/@effect/core/tsconfig.base.json
new file mode 100644
index 0000000..cc7c28d
--- /dev/null
+++ b/node_modules/@effect/core/tsconfig.base.json
@@ -0,0 +1,62 @@
+{
+    "compilerOptions": {
+        "moduleDetection": "force",
+        "composite": true,
+        "downlevelIteration": true,
+        "resolveJsonModule": true,
+        "esModuleInterop": true,
+        "declaration": true,
+        "skipLibCheck": true,
+        "emitDecoratorMetadata": true,
+        "experimentalDecorators": true,
+        "preserveSymlinks": true,
+        "moduleResolution": "node",
+        "noEmit": false,
+        "lib": [
+            "ES2021"
+        ],
+        "sourceMap": true,
+        "declarationMap": true,
+        "strict": true,
+        "noImplicitReturns": false,
+        "noUnusedLocals": true,
+        "noUnusedParameters": false,
+        "noFallthroughCasesInSwitch": true,
+        "noEmitOnError": false,
+        "noErrorTruncation": false,
+        "allowJs": false,
+        "checkJs": false,
+        "forceConsistentCasingInFileNames": true,
+        "suppressImplicitAnyIndexErrors": true,
+        "stripInternal": true,
+        "noImplicitAny": true,
+        "noImplicitThis": true,
+        "noUncheckedIndexedAccess": true,
+        "strictNullChecks": true,
+        "baseUrl": ".",
+        "target": "ES2021",
+        "module": "ES6",
+        "incremental": true,
+        "removeComments": false,
+        // "paths": {
+        //     "@effect/core": [
+        //         "./packages/core/src/index.ts"
+        //     ],
+        //     "@effect/core/test/*": [
+        //         "./packages/core/test/*"
+        //     ],
+        //     "@effect/core/examples/*": [
+        //         "./packages/core/examples/*"
+        //     ],
+        //     "@effect/core/*": [
+        //         "./packages/core/src/*"
+        //     ],
+        // }
+    },
+    "include": [],
+    "exclude": [
+        "node_modules",
+        "build",
+        "lib"
+    ]
+}
\ No newline at end of file
diff --git a/node_modules/@effect/core/tsconfig.build.json b/node_modules/@effect/core/tsconfig.build.json
new file mode 100644
index 0000000..148b428
--- /dev/null
+++ b/node_modules/@effect/core/tsconfig.build.json
@@ -0,0 +1,13 @@
+{
+    "extends": "./tsconfig.base.json",
+    "compilerOptions": {
+        "outDir": "build/esm",
+        "declarationDir": "build/dts",
+        "tsBuildInfoFile": "build/tsbuildinfo/esm.tsbuildinfo",
+        "tsPlusConfig": "./tsplus.config.json",
+        "rootDir": "_src"
+    },
+    "include": [
+        "_src/**/*.ts"
+    ]
+}
\ No newline at end of file
diff --git a/node_modules/@effect/core/tsconfig.json b/node_modules/@effect/core/tsconfig.json
new file mode 100644
index 0000000..597ce10
--- /dev/null
+++ b/node_modules/@effect/core/tsconfig.json
@@ -0,0 +1,18 @@
+{
+  "extends": "./tsconfig.base.json",
+  "compilerOptions": {
+    "tsPlusConfig": "./tsplus.config.json",
+    "tsBuildInfoFile": "build/tsbuildinfo/tsconfig.tsbuildinfo"
+  },
+  "references": [
+    {
+      "path": "./tsconfig.build.json"
+    }
+  ],
+  "ts-node": {
+    "files": true,
+    "require": [
+      "tsconfig-paths/register"
+    ]
+  }
+}
\ No newline at end of file
diff --git a/node_modules/@effect/core/tsplus.config.json b/node_modules/@effect/core/tsplus.config.json
new file mode 100644
index 0000000..1f1ceb8
--- /dev/null
+++ b/node_modules/@effect/core/tsplus.config.json
@@ -0,0 +1,11 @@
+{
+  "importMap": {
+    "^(.*)/packages/([^/]*)/src(.*)/index\\.ts$": "@effect/$2$3",
+    "^(.*)/packages/([^/]*)/src(.*)\\.ts$": "@effect/$2$3",
+    "^(.*)/packages/([^/]*)/test/(.*)\\.ts$": "@effect/$2/test/$3",
+    "^(.*)/packages/([^/]*)/examples/(.*)\\.ts$": "@effect/$2/examples/$3"
+  },
+  "traceMap": {
+    "^(.*)/packages/([^/]*)/(.*)$": "(@effect/$2) $3"
+  }
+}
