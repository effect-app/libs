{
  "effect/Cache": [
    {
      "definitionName": "Cache",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache.Ops"
        }
      ]
    },
    {
      "definitionName": "CacheStats",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache.Stats"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache.Stats.Ops"
        }
      ]
    },
    {
      "definitionName": "CacheTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ConsumerCache",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache/ConsumerCache"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache/ConsumerCache.Ops"
        }
      ]
    },
    {
      "definitionName": "EntryStats",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache/EntryStats"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache/EntryStats.Ops"
        }
      ]
    },
    {
      "definitionName": "Lookup",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cache/Lookup"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cache/Lookup.Ops"
        }
      ]
    },
    {
      "definitionName": "CacheTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cache.TypeId.Ops",
          "name": "CacheTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cache.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeCacheStats",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cache.Stats.Ops",
          "name": "makeCacheStats"
        }
      ]
    },
    {
      "definitionName": "makeEntryStats",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cache.Ops",
          "name": "makeEntryStats"
        }
      ]
    },
    {
      "definitionName": "makeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cache.Ops",
          "name": "makeWith"
        }
      ]
    }
  ],
  "effect/Cause": [
    {
      "definitionName": "Annotated",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Annotated"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Annotated.Ops"
        }
      ]
    },
    {
      "definitionName": "Cause",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Ops"
        }
      ]
    },
    {
      "definitionName": "CauseReducer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Reducer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Reducer.Ops"
        }
      ]
    },
    {
      "definitionName": "CauseTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Die",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Die"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Die.Ops"
        }
      ]
    },
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Empty.Ops"
        }
      ]
    },
    {
      "definitionName": "Fail",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Fail"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Fail.Ops"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/IllegalArgumentException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/IllegalArgumentException.Ops"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/IllegalArgumentExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/IllegalArgumentExceptionTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Interrupt",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Interrupt"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Interrupt.Ops"
        }
      ]
    },
    {
      "definitionName": "InterruptedException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/InterruptedException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/InterruptedException.Ops"
        }
      ]
    },
    {
      "definitionName": "InterruptedExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/InterruptedExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/InterruptedExceptionTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "InvalidHubCapacityException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/InvalidHubCapacityException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/InvalidHubCapacityException.Ops"
        }
      ]
    },
    {
      "definitionName": "InvalidHubCapacityExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/InvalidHubCapacityExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/InvalidHubCapacityExceptionTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/NoSuchElementException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/NoSuchElementException.Ops"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/NoSuchElementExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/NoSuchElementExceptionTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Parallel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Parallel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Parallel.Ops"
        }
      ]
    },
    {
      "definitionName": "RuntimeException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/RuntimeException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/RuntimeException.Ops"
        }
      ]
    },
    {
      "definitionName": "RuntimeExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/RuntimeExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/RuntimeExceptionTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Sequential",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause/Sequential"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause/Sequential.Ops"
        }
      ]
    },
    {
      "definitionName": "CauseTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.TypeId.Ops",
          "name": "CauseTypeId"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "IllegalArgumentException"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentExceptionTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause/IllegalArgumentExceptionTypeId.Ops",
          "name": "IllegalArgumentExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "InterruptedException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "InterruptedException"
        }
      ]
    },
    {
      "definitionName": "InterruptedExceptionTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause/InterruptedExceptionTypeId.Ops",
          "name": "InterruptedExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "InvalidHubCapacityExceptionTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause/InvalidHubCapacityExceptionTypeId.Ops",
          "name": "InvalidHubCapacityExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "NoSuchElementException"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementExceptionTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause/NoSuchElementExceptionTypeId.Ops",
          "name": "NoSuchElementExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "RuntimeException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "RuntimeException"
        }
      ]
    },
    {
      "definitionName": "RuntimeExceptionTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause/RuntimeExceptionTypeId.Ops",
          "name": "RuntimeExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "as"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "contains",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "contains"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "contains"
        }
      ]
    },
    {
      "definitionName": "defects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "defects"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "defects"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "dieOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "dieOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "dieOption"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failureOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failureOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failureOption"
        }
      ]
    },
    {
      "definitionName": "failureOrCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failureOrCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failureOrCause"
        }
      ]
    },
    {
      "definitionName": "failures",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failures"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failures"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "find",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "find"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "find"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "flatten"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "flipCauseOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "flipCauseOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "flipCauseOption"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "interrupt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "interruptOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "interruptOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "interruptOption"
        }
      ]
    },
    {
      "definitionName": "interruptors",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "interruptors"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "interruptors"
        }
      ]
    },
    {
      "definitionName": "isCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isCause"
        }
      ]
    },
    {
      "definitionName": "isDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isDie"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isDie"
        }
      ]
    },
    {
      "definitionName": "isDieType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isDieType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isDieType"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isEmptyType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isEmptyType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isEmptyType"
        }
      ]
    },
    {
      "definitionName": "isFailType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isFailType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isFailType"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isFailure"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isIllegalArgumentException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isIllegalArgumentException"
        }
      ]
    },
    {
      "definitionName": "isInterrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isInterrupted"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isInterrupted"
        }
      ]
    },
    {
      "definitionName": "isInterruptedException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isInterruptedException"
        }
      ]
    },
    {
      "definitionName": "isInterruptedOnly",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isInterruptedOnly"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isInterruptedOnly"
        }
      ]
    },
    {
      "definitionName": "isInterruptType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isInterruptType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isInterruptType"
        }
      ]
    },
    {
      "definitionName": "isNoSuchElementException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isNoSuchElementException"
        }
      ]
    },
    {
      "definitionName": "isParallelType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isParallelType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isParallelType"
        }
      ]
    },
    {
      "definitionName": "isRuntimeException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isRuntimeException"
        }
      ]
    },
    {
      "definitionName": "isSequentialType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "isSequentialType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "isSequentialType"
        }
      ]
    },
    {
      "definitionName": "keepDefects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "keepDefects"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "keepDefects"
        }
      ]
    },
    {
      "definitionName": "linearize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "linearize"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "linearize"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "originalError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "originalError"
        }
      ]
    },
    {
      "definitionName": "parallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "parallel"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "parallel"
        }
      ]
    },
    {
      "definitionName": "pretty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "pretty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "pretty"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "reduceWithContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "reduceWithContext"
        }
      ]
    },
    {
      "definitionName": "sequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "sequential"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "sequential"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "squash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "squash"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "squash"
        }
      ]
    },
    {
      "definitionName": "squashWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "squashWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "squashWith"
        }
      ]
    },
    {
      "definitionName": "stripFailures",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "stripFailures"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "stripFailures"
        }
      ]
    },
    {
      "definitionName": "stripSomeDefects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "stripSomeDefects"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "stripSomeDefects"
        }
      ]
    }
  ],
  "effect/Clock": [
    {
      "definitionName": "CancelToken",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock/CancelToken"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock/CancelToken.Ops"
        }
      ]
    },
    {
      "definitionName": "Clock",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.Ops"
        }
      ]
    },
    {
      "definitionName": "ClockScheduler",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.Scheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.Scheduler.Ops"
        }
      ]
    },
    {
      "definitionName": "ClockTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Task",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock/Task"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock/Task.Ops"
        }
      ]
    },
    {
      "definitionName": "ClockTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Clock.TypeId.Ops",
          "name": "ClockTypeId"
        }
      ]
    },
    {
      "definitionName": "clockWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Clock.Ops",
          "name": "clockWith"
        }
      ]
    },
    {
      "definitionName": "currentTimeMillis",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "currentTimeMillis"
        }
      ]
    },
    {
      "definitionName": "currentTimeNanos",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "currentTimeNanos"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Clock.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "sleep",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Clock.Ops",
          "name": "sleep"
        }
      ]
    }
  ],
  "effect/Concurrency": [
    {
      "definitionName": "Concurrency",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Concurrency"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Concurrency.Ops"
        }
      ]
    }
  ],
  "effect/Config": [
    {
      "definitionName": "Config",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.TypeId.Ops",
          "name": "ConfigTypeId"
        }
      ]
    },
    {
      "definitionName": "all",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "all"
        }
      ]
    },
    {
      "definitionName": "array",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "array"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "array"
        }
      ]
    },
    {
      "definitionName": "boolean",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "boolean"
        }
      ]
    },
    {
      "definitionName": "chunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "chunk"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "chunk"
        }
      ]
    },
    {
      "definitionName": "date",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "date"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "hashMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "hashMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "hashMap"
        }
      ]
    },
    {
      "definitionName": "hashSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "hashSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "hashSet"
        }
      ]
    },
    {
      "definitionName": "integer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "integer"
        }
      ]
    },
    {
      "definitionName": "isConfig",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "isConfig"
        }
      ]
    },
    {
      "definitionName": "logLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "logLevel"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapAttempt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "mapAttempt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "mapAttempt"
        }
      ]
    },
    {
      "definitionName": "mapOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "mapOrFail"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "mapOrFail"
        }
      ]
    },
    {
      "definitionName": "nested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "nested"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "nested"
        }
      ]
    },
    {
      "definitionName": "number",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "number"
        }
      ]
    },
    {
      "definitionName": "option",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "option"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "option"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "orElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseIf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "orElseIf"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "orElseIf"
        }
      ]
    },
    {
      "definitionName": "primitive",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "primitive"
        }
      ]
    },
    {
      "definitionName": "repeat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "repeat"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "repeat"
        }
      ]
    },
    {
      "definitionName": "secret",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "secret"
        }
      ]
    },
    {
      "definitionName": "string",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "string"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Config.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "suspend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "suspend"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "unwrap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "unwrap"
        }
      ]
    },
    {
      "definitionName": "validate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "validate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "validate"
        }
      ]
    },
    {
      "definitionName": "withDefault",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "withDefault"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "withDefault"
        }
      ]
    },
    {
      "definitionName": "withDescription",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "withDescription"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "withDescription"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "zipWith"
        }
      ]
    }
  ],
  "effect/ConfigError": [
    {
      "definitionName": "And",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/And"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/And.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigError",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigErrorReducer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError.Reducer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError.Reducer.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigErrorTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "InvalidData",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/InvalidData"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/InvalidData.Ops"
        }
      ]
    },
    {
      "definitionName": "MissingData",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/MissingData"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/MissingData.Ops"
        }
      ]
    },
    {
      "definitionName": "Options",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/Options"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/Options.Ops"
        }
      ]
    },
    {
      "definitionName": "Or",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/Or"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/Or.Ops"
        }
      ]
    },
    {
      "definitionName": "SourceUnavailable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/SourceUnavailable"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/SourceUnavailable.Ops"
        }
      ]
    },
    {
      "definitionName": "Unsupported",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigError/Unsupported"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigError/Unsupported.Ops"
        }
      ]
    },
    {
      "definitionName": "And",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "And"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "And"
        }
      ]
    },
    {
      "definitionName": "ConfigErrorTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.TypeId.Ops",
          "name": "ConfigErrorTypeId"
        }
      ]
    },
    {
      "definitionName": "InvalidData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "InvalidData"
        }
      ]
    },
    {
      "definitionName": "MissingData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "MissingData"
        }
      ]
    },
    {
      "definitionName": "Or",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "Or"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "Or"
        }
      ]
    },
    {
      "definitionName": "SourceUnavailable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "SourceUnavailable"
        }
      ]
    },
    {
      "definitionName": "Unsupported",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "Unsupported"
        }
      ]
    },
    {
      "definitionName": "isAnd",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isAnd"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isAnd"
        }
      ]
    },
    {
      "definitionName": "isConfigError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isConfigError"
        }
      ]
    },
    {
      "definitionName": "isInvalidData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isInvalidData"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isInvalidData"
        }
      ]
    },
    {
      "definitionName": "isMissingData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isMissingData"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isMissingData"
        }
      ]
    },
    {
      "definitionName": "isMissingDataOnly",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isMissingDataOnly"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isMissingDataOnly"
        }
      ]
    },
    {
      "definitionName": "isOr",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isOr"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isOr"
        }
      ]
    },
    {
      "definitionName": "isSourceUnavailable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isSourceUnavailable"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isSourceUnavailable"
        }
      ]
    },
    {
      "definitionName": "isUnsupported",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "isUnsupported"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "isUnsupported"
        }
      ]
    },
    {
      "definitionName": "prefixed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "prefixed"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "prefixed"
        }
      ]
    },
    {
      "definitionName": "reduceWithContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigError",
          "name": "reduceWithContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigError.Ops",
          "name": "reduceWithContext"
        }
      ]
    }
  ],
  "effect/ConfigProvider": [
    {
      "definitionName": "ConfigProvider",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProvider"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProvider.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigProviderTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProvider.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProvider.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "FlatConfigProviderTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProvider/FlatConfigProviderTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProvider/FlatConfigProviderTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigProviderTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.TypeId.Ops",
          "name": "ConfigProviderTypeId"
        }
      ]
    },
    {
      "definitionName": "FlatConfigProviderTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider/FlatConfigProviderTypeId.Ops",
          "name": "FlatConfigProviderTypeId"
        }
      ]
    },
    {
      "definitionName": "constantCase",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "constantCase"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "constantCase"
        }
      ]
    },
    {
      "definitionName": "fromEnv",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "fromEnv"
        }
      ]
    },
    {
      "definitionName": "fromFlat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "fromFlat"
        }
      ]
    },
    {
      "definitionName": "fromMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "fromMap"
        }
      ]
    },
    {
      "definitionName": "kebabCase",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "kebabCase"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "kebabCase"
        }
      ]
    },
    {
      "definitionName": "lowerCase",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "lowerCase"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "lowerCase"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeFlat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "makeFlat"
        }
      ]
    },
    {
      "definitionName": "mapInputPath",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProvider",
          "name": "mapInputPath"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "mapInputPath"
        }
      ]
    },
    {
      "definitionName": "nested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProvider",
          "name": "nested"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "nested"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProvider",
          "name": "orElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "snakeCase",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "snakeCase"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "snakeCase"
        }
      ]
    },
    {
      "definitionName": "unnested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProvider",
          "name": "unnested"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "unnested"
        }
      ]
    },
    {
      "definitionName": "upperCase",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "upperCase"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "upperCase"
        }
      ]
    },
    {
      "definitionName": "within",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProvider",
          "name": "within"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "within"
        }
      ]
    }
  ],
  "effect/ConfigProviderPathPatch": [
    {
      "definitionName": "AndThen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch/AndThen"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch/AndThen.Ops"
        }
      ]
    },
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch/Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch/Empty.Ops"
        }
      ]
    },
    {
      "definitionName": "MapName",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch/MapName"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch/MapName.Ops"
        }
      ]
    },
    {
      "definitionName": "Nested",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch/Nested"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch/Nested.Ops"
        }
      ]
    },
    {
      "definitionName": "PathPatch",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "Unnested",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigProviderPathPatch/Unnested"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigProviderPathPatch/Unnested.Ops"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProviderPathPatch",
          "name": "andThen"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "mapName",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProviderPathPatch",
          "name": "mapName"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops",
          "name": "mapName"
        }
      ]
    },
    {
      "definitionName": "nested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProviderPathPatch",
          "name": "nested"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops",
          "name": "nested"
        }
      ]
    },
    {
      "definitionName": "unnested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ConfigProviderPathPatch",
          "name": "unnested"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProviderPathPatch.Ops",
          "name": "unnested"
        }
      ]
    }
  ],
  "effect/ConfigSecret": [
    {
      "definitionName": "ConfigSecret",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigSecret"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigSecret.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigSecretTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ConfigSecret.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ConfigSecret.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ConfigSecretTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.TypeId.Ops",
          "name": "ConfigSecretTypeId"
        }
      ]
    },
    {
      "definitionName": "fromChunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "fromChunk"
        }
      ]
    },
    {
      "definitionName": "fromString",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "fromString"
        }
      ]
    },
    {
      "definitionName": "isConfigSecret",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "isConfigSecret"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "unsafeWipe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigSecret",
          "name": "unsafeWipe"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "unsafeWipe"
        }
      ]
    },
    {
      "definitionName": "value",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigSecret",
          "name": "value"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigSecret.Ops",
          "name": "value"
        }
      ]
    }
  ],
  "effect/Console": [
    {
      "definitionName": "Console",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Console"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Console.Ops"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Console/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Console/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "UnsafeConsole",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Console/UnsafeConsole"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Console/UnsafeConsole.Ops"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console/TypeId.Ops",
          "name": "TypeId"
        }
      ]
    },
    {
      "definitionName": "assert",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "assert"
        }
      ]
    },
    {
      "definitionName": "clear",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "clear"
        }
      ]
    },
    {
      "definitionName": "consoleWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "consoleWith"
        }
      ]
    },
    {
      "definitionName": "count",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "count"
        }
      ]
    },
    {
      "definitionName": "countReset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "countReset"
        }
      ]
    },
    {
      "definitionName": "debug",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "debug"
        }
      ]
    },
    {
      "definitionName": "dir",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "dir"
        }
      ]
    },
    {
      "definitionName": "dirxml",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "dirxml"
        }
      ]
    },
    {
      "definitionName": "error",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "error"
        }
      ]
    },
    {
      "definitionName": "group",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "group"
        }
      ]
    },
    {
      "definitionName": "info",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "info"
        }
      ]
    },
    {
      "definitionName": "log",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "log"
        }
      ]
    },
    {
      "definitionName": "setConsole",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "setConsole"
        }
      ]
    },
    {
      "definitionName": "table",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "table"
        }
      ]
    },
    {
      "definitionName": "time",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "time"
        }
      ]
    },
    {
      "definitionName": "timeLog",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "timeLog"
        }
      ]
    },
    {
      "definitionName": "trace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "trace"
        }
      ]
    },
    {
      "definitionName": "warn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Console.Ops",
          "name": "warn"
        }
      ]
    },
    {
      "definitionName": "withConsole",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withConsole"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withConsole"
        }
      ]
    },
    {
      "definitionName": "withGroup",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withGroup"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withGroup"
        }
      ]
    },
    {
      "definitionName": "withTime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withTime"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withTime"
        }
      ]
    }
  ],
  "effect/DefaultServices": [
    {
      "definitionName": "DefaultServices",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/DefaultServices"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/DefaultServices.Ops"
        }
      ]
    },
    {
      "definitionName": "currentServices",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentServices"
        }
      ]
    }
  ],
  "effect/Deferred": [
    {
      "definitionName": "Deferred",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Deferred"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Deferred.Ops"
        }
      ]
    },
    {
      "definitionName": "DeferredTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Deferred.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Deferred.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "DeferredTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.TypeId.Ops",
          "name": "DeferredTypeId"
        }
      ]
    },
    {
      "definitionName": "complete",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "complete"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "complete"
        }
      ]
    },
    {
      "definitionName": "completeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "completeWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "completeWith"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "die"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "dieSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "dieSync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "dieSync"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "done"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "fail"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "failCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "failCauseSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "failCauseSync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "failCauseSync"
        }
      ]
    },
    {
      "definitionName": "failSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "failSync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "failSync"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "interrupt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "interruptWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "interruptWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "interruptWith"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "isDone"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "isDone"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "makeAs"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "poll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "succeed"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "sync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "unsafeDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Deferred",
          "name": "unsafeDone"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "unsafeDone"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Deferred.Ops",
          "name": "unsafeMake"
        }
      ]
    }
  ],
  "effect/Effect": [
    {
      "definitionName": "Adapter",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect/Adapter"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect/Adapter.Ops"
        }
      ]
    },
    {
      "definitionName": "Blocked",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect/Blocked"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect/Blocked.Ops"
        }
      ]
    },
    {
      "definitionName": "Effect",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.Ops"
        }
      ]
    },
    {
      "definitionName": "EffectGen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.Gen"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.Gen.Ops"
        }
      ]
    },
    {
      "definitionName": "EffectTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "EffectTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.TypeLambda"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.TypeLambda.Ops"
        }
      ]
    },
    {
      "definitionName": "EffectUnify",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.Unify"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.Unify.Ops"
        }
      ]
    },
    {
      "definitionName": "EffectUnifyBlacklist",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.UnifyBlacklist"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.UnifyBlacklist.Ops"
        }
      ]
    },
    {
      "definitionName": "MergeRecord",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect/MergeRecord"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect/MergeRecord.Ops"
        }
      ]
    },
    {
      "definitionName": "Permit",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect/Permit"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect/Permit.Ops"
        }
      ]
    },
    {
      "definitionName": "Semaphore",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect/Semaphore"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect/Semaphore.Ops"
        }
      ]
    },
    {
      "definitionName": "Do",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "Do"
        }
      ]
    },
    {
      "definitionName": "EffectTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.TypeId.Ops",
          "name": "EffectTypeId"
        }
      ]
    },
    {
      "definitionName": "acquireRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect.Ops",
          "kind": "static",
          "name": "acquireRelease"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireRelease"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "acquireRelease"
        }
      ]
    },
    {
      "definitionName": "acquireReleaseInterruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireReleaseInterruptible"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "acquireReleaseInterruptible"
        }
      ]
    },
    {
      "definitionName": "acquireUseRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireUseRelease"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "acquireUseRelease"
        }
      ]
    },
    {
      "definitionName": "addFinalizer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "addFinalizer"
        }
      ]
    },
    {
      "definitionName": "all",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "all"
        }
      ]
    },
    {
      "definitionName": "allowInterrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "allowInterrupt"
        }
      ]
    },
    {
      "definitionName": "allSuccesses",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "allSuccesses"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "allSuccesses"
        }
      ]
    },
    {
      "definitionName": "allWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "allWith"
        }
      ]
    },
    {
      "definitionName": "annotateCurrentSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "annotateCurrentSpan"
        }
      ]
    },
    {
      "definitionName": "annotateLogs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "annotateLogs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "annotateLogs"
        }
      ]
    },
    {
      "definitionName": "annotateSpans",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "annotateSpans"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "annotateSpans"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "as"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "asSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asSome"
        }
      ]
    },
    {
      "definitionName": "asSomeError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asSomeError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asSomeError"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asUnit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "async",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "async"
        }
      ]
    },
    {
      "definitionName": "asyncEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asyncEffect"
        }
      ]
    },
    {
      "definitionName": "asyncEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asyncEither"
        }
      ]
    },
    {
      "definitionName": "asyncOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "asyncOption"
        }
      ]
    },
    {
      "definitionName": "awaitAllChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "awaitAllChildren"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "awaitAllChildren"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "bind"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "bindTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "bindTo"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "bindTo"
        }
      ]
    },
    {
      "definitionName": "blocked",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "blocked"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "blocked"
        }
      ]
    },
    {
      "definitionName": "cached",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "cached"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cached"
        }
      ]
    },
    {
      "definitionName": "cachedFunction",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cachedFunction"
        }
      ]
    },
    {
      "definitionName": "cachedInvalidateWithTTL",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "cachedInvalidateWithTTL"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cachedInvalidateWithTTL"
        }
      ]
    },
    {
      "definitionName": "cachedWithTTL",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "cachedWithTTL"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cachedWithTTL"
        }
      ]
    },
    {
      "definitionName": "cacheRequestResult",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cacheRequestResult"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "catchAllCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchAllCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchAllCause"
        }
      ]
    },
    {
      "definitionName": "catchAllDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchAllDefect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchAllDefect"
        }
      ]
    },
    {
      "definitionName": "catchIf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchIf"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchIf"
        }
      ]
    },
    {
      "definitionName": "catchSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchSome"
        }
      ]
    },
    {
      "definitionName": "catchSomeCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchSomeCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchSomeCause"
        }
      ]
    },
    {
      "definitionName": "catchSomeDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchSomeDefect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchSomeDefect"
        }
      ]
    },
    {
      "definitionName": "catchTag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchTag"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchTag"
        }
      ]
    },
    {
      "definitionName": "catchTags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "catchTags"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "catchTags"
        }
      ]
    },
    {
      "definitionName": "cause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "cause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "cause"
        }
      ]
    },
    {
      "definitionName": "checkInterruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "checkInterruptible"
        }
      ]
    },
    {
      "definitionName": "clock",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "clock"
        }
      ]
    },
    {
      "definitionName": "clockWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "clockWith"
        }
      ]
    },
    {
      "definitionName": "config",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "config"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Config.Ops",
          "name": "config"
        }
      ]
    },
    {
      "definitionName": "configProviderWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "configProviderWith"
        }
      ]
    },
    {
      "definitionName": "context",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "context"
        }
      ]
    },
    {
      "definitionName": "contextWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "contextWith"
        }
      ]
    },
    {
      "definitionName": "contextWithEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "contextWithEffect"
        }
      ]
    },
    {
      "definitionName": "currentParentSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "currentParentSpan"
        }
      ]
    },
    {
      "definitionName": "currentSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "currentSpan"
        }
      ]
    },
    {
      "definitionName": "daemonChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "daemonChildren"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "daemonChildren"
        }
      ]
    },
    {
      "definitionName": "delay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "delay"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "delay"
        }
      ]
    },
    {
      "definitionName": "descriptor",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "descriptor"
        }
      ]
    },
    {
      "definitionName": "descriptorWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "descriptorWith"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "dieMessage",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "dieMessage"
        }
      ]
    },
    {
      "definitionName": "dieSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "dieSync"
        }
      ]
    },
    {
      "definitionName": "diffFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "diffFiberRefs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "diffFiberRefs"
        }
      ]
    },
    {
      "definitionName": "disconnect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "disconnect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "disconnect"
        }
      ]
    },
    {
      "definitionName": "dropUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "dropUntil"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "dropUntil"
        }
      ]
    },
    {
      "definitionName": "dropWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "dropWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "dropWhile"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "either"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "ensuring",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "ensuring"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "ensuring"
        }
      ]
    },
    {
      "definitionName": "ensuringChild",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "ensuringChild"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "ensuringChild"
        }
      ]
    },
    {
      "definitionName": "ensuringChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "ensuringChildren"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "ensuringChildren"
        }
      ]
    },
    {
      "definitionName": "eventually",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "eventually"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "eventually"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "every"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "exists"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "exit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "exit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "exit"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "failCauseSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "failCauseSync"
        }
      ]
    },
    {
      "definitionName": "failSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "failSync"
        }
      ]
    },
    {
      "definitionName": "fiberId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fiberId"
        }
      ]
    },
    {
      "definitionName": "fiberIdWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fiberIdWith"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterOrDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "filterOrDie"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "filterOrDie"
        }
      ]
    },
    {
      "definitionName": "filterOrDieMessage",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "filterOrDieMessage"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "filterOrDieMessage"
        }
      ]
    },
    {
      "definitionName": "filterOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "filterOrElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "filterOrElse"
        }
      ]
    },
    {
      "definitionName": "filterOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "filterOrFail"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "filterOrFail"
        }
      ]
    },
    {
      "definitionName": "finalizersMask",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "finalizersMask"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "findFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "firstSuccessOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "firstSuccessOf"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "firstSuccessOf"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Context/Tag",
          "kind": "fluent",
          "name": "flatMap"
        },
        {
          "typeName": "effect/data/Context/Tag",
          "kind": "fluent",
          "name": "accessWithEffect"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatMapStep",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "flatMapStep"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "flatMapStep"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "flatten"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "flip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "flip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "flip"
        }
      ]
    },
    {
      "definitionName": "flipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "flipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "flipWith"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forever",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forever"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forever"
        }
      ]
    },
    {
      "definitionName": "fork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "fork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fork"
        }
      ]
    },
    {
      "definitionName": "forkAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "forkAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forkAll"
        }
      ]
    },
    {
      "definitionName": "forkDaemon",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forkDaemon"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forkDaemon"
        }
      ]
    },
    {
      "definitionName": "forkIn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "forkIn"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forkIn"
        }
      ]
    },
    {
      "definitionName": "forkScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forkScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forkScoped"
        }
      ]
    },
    {
      "definitionName": "forkWithErrorHandler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "forkWithErrorHandler"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "forkWithErrorHandler"
        }
      ]
    },
    {
      "definitionName": "fromFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fromFiber"
        }
      ]
    },
    {
      "definitionName": "fromFiberEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fromFiberEffect"
        }
      ]
    },
    {
      "definitionName": "fromNullable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "fromNullable"
        }
      ]
    },
    {
      "definitionName": "gen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "gen"
        }
      ]
    },
    {
      "definitionName": "getFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "getFiberRefs"
        }
      ]
    },
    {
      "definitionName": "getRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "getRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "head"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "ignore",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "ignore"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "ignore"
        }
      ]
    },
    {
      "definitionName": "ignoreLogged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "ignoreLogged"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "ignoreLogged"
        }
      ]
    },
    {
      "definitionName": "inheritFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "inheritFiberRefs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "inheritFiberRefs"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "interruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "interruptible"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interruptible"
        }
      ]
    },
    {
      "definitionName": "interruptibleMask",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interruptibleMask"
        }
      ]
    },
    {
      "definitionName": "interruptWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "interruptWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "interruptWith"
        }
      ]
    },
    {
      "definitionName": "intoDeferred",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "intoDeferred"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "intoDeferred"
        }
      ]
    },
    {
      "definitionName": "isEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "isEffect"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "isFailure"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "isSuccess"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "isSuccess"
        }
      ]
    },
    {
      "definitionName": "iterate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "iterate"
        }
      ]
    },
    {
      "definitionName": "labelMetrics",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "labelMetrics"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "labelMetrics"
        }
      ]
    },
    {
      "definitionName": "labelMetricsScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "labelMetricsScoped"
        }
      ]
    },
    {
      "definitionName": "labelMetricsScopedSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "labelMetricsScopedSet"
        }
      ]
    },
    {
      "definitionName": "labelMetricsSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "labelMetricsSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "labelMetricsSet"
        }
      ]
    },
    {
      "definitionName": "linkSpans",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "linkSpans"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "linkSpans"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/FiberRef",
          "kind": "fluent",
          "name": "locally"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "locally"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "locally"
        }
      ]
    },
    {
      "definitionName": "locallyScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "locallyScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "locallyScoped"
        }
      ]
    },
    {
      "definitionName": "locallyScopedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "locallyScopedWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "locallyScopedWith"
        }
      ]
    },
    {
      "definitionName": "locallyWith",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/FiberRef",
          "kind": "fluent",
          "name": "locallyWith"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "locallyWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "locallyWith"
        }
      ]
    },
    {
      "definitionName": "log",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "log"
        }
      ]
    },
    {
      "definitionName": "logAnnotations",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logAnnotations"
        }
      ]
    },
    {
      "definitionName": "logDebug",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logDebug"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logDebug"
        }
      ]
    },
    {
      "definitionName": "logError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logError"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logError"
        }
      ]
    },
    {
      "definitionName": "logFatal",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logFatal"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logFatal"
        }
      ]
    },
    {
      "definitionName": "logInfo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logInfo"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logInfo"
        }
      ]
    },
    {
      "definitionName": "logTrace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logTrace"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logTrace"
        }
      ]
    },
    {
      "definitionName": "logWarning",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "logWarning"
        },
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logWarning"
        }
      ]
    },
    {
      "definitionName": "loop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "loop"
        }
      ]
    },
    {
      "definitionName": "makeSemaphore",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect/Semaphore.Ops",
          "kind": "static",
          "name": "make"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "makeSemaphore"
        }
      ]
    },
    {
      "definitionName": "makeSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "makeSpan"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Context/Tag",
          "kind": "fluent",
          "name": "map"
        },
        {
          "typeName": "effect/data/Context/Tag",
          "kind": "fluent",
          "name": "accessWith"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapAccum",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "mapAccum"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mapAccum"
        }
      ]
    },
    {
      "definitionName": "mapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "mapBoth"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mapBoth"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "mapError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "mapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "mapErrorCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mapErrorCause"
        }
      ]
    },
    {
      "definitionName": "mapInputContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "mapInputContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mapInputContext"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "matchCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "matchCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "matchCause"
        }
      ]
    },
    {
      "definitionName": "matchCauseEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "matchCauseEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "matchCauseEffect"
        }
      ]
    },
    {
      "definitionName": "matchEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "matchEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "matchEffect"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "merge"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "mergeAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "mergeAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "mergeAll"
        }
      ]
    },
    {
      "definitionName": "metricLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "metricLabels"
        }
      ]
    },
    {
      "definitionName": "negate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "negate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "negate"
        }
      ]
    },
    {
      "definitionName": "never",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "never"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "none"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "once",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "once"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "once"
        }
      ]
    },
    {
      "definitionName": "onError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "onError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "onError"
        }
      ]
    },
    {
      "definitionName": "onExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "onExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "onExit"
        }
      ]
    },
    {
      "definitionName": "onInterrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "onInterrupt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "onInterrupt"
        }
      ]
    },
    {
      "definitionName": "option",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "option"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "option"
        }
      ]
    },
    {
      "definitionName": "optionFromOptional",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "optionFromOptional"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "optionFromOptional"
        }
      ]
    },
    {
      "definitionName": "orDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "orDie"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "orDie"
        }
      ]
    },
    {
      "definitionName": "orDieWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "orDieWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "orDieWith"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "|"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "orElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "orElseFail"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "orElseFail"
        }
      ]
    },
    {
      "definitionName": "orElseSucceed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "orElseSucceed"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "orElseSucceed"
        }
      ]
    },
    {
      "definitionName": "parallelErrors",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "parallelErrors"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "parallelErrors"
        }
      ]
    },
    {
      "definitionName": "parallelFinalizers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "parallelFinalizers"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "parallelFinalizers"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "partition"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "patchFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefsPatch",
          "name": "patchFiberRefs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefsPatch.Ops",
          "name": "patchFiberRefs"
        }
      ]
    },
    {
      "definitionName": "patchRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "patchRuntimeFlags"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "patchRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "promise",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "promise"
        }
      ]
    },
    {
      "definitionName": "provide",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "provide"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "provide"
        }
      ]
    },
    {
      "definitionName": "provideService",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "provideService"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "provideService"
        }
      ]
    },
    {
      "definitionName": "provideServiceEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "provideServiceEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "provideServiceEffect"
        }
      ]
    },
    {
      "definitionName": "race",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "race"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "race"
        }
      ]
    },
    {
      "definitionName": "raceAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "raceAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "raceAll"
        }
      ]
    },
    {
      "definitionName": "raceFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "raceFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "raceFirst"
        }
      ]
    },
    {
      "definitionName": "raceWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "raceWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "raceWith"
        }
      ]
    },
    {
      "definitionName": "random",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "random"
        }
      ]
    },
    {
      "definitionName": "randomWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "randomWith"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "reduceEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "reduceEffect"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "reduceRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reduceWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "reduceWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "reduceWhile"
        }
      ]
    },
    {
      "definitionName": "repeat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeat"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeat"
        }
      ]
    },
    {
      "definitionName": "repeatN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatN"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatN"
        }
      ]
    },
    {
      "definitionName": "repeatOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatOrElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatOrElse"
        }
      ]
    },
    {
      "definitionName": "repeatUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatUntil"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatUntil"
        }
      ]
    },
    {
      "definitionName": "repeatUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatUntilEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatUntilEffect"
        }
      ]
    },
    {
      "definitionName": "repeatWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatWhile"
        }
      ]
    },
    {
      "definitionName": "repeatWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "repeatWhileEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "repeatWhileEffect"
        }
      ]
    },
    {
      "definitionName": "replicate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "replicate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "replicate"
        }
      ]
    },
    {
      "definitionName": "replicateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "replicateEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "replicateEffect"
        }
      ]
    },
    {
      "definitionName": "request",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "request"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retry"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "retryN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryN"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryN"
        }
      ]
    },
    {
      "definitionName": "retryOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryOrElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryOrElse"
        }
      ]
    },
    {
      "definitionName": "retryUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryUntil"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryUntil"
        }
      ]
    },
    {
      "definitionName": "retryUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryUntilEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryUntilEffect"
        }
      ]
    },
    {
      "definitionName": "retryWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryWhile"
        }
      ]
    },
    {
      "definitionName": "retryWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "retryWhileEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "retryWhileEffect"
        }
      ]
    },
    {
      "definitionName": "runCallback",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "runCallback"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runCallback"
        }
      ]
    },
    {
      "definitionName": "runFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "runFork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runFork"
        }
      ]
    },
    {
      "definitionName": "runPromise",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "runPromise"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runPromise"
        }
      ]
    },
    {
      "definitionName": "runPromiseExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "runPromiseExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runPromiseExit"
        }
      ]
    },
    {
      "definitionName": "runRequestBlock",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RequestBlock",
          "name": "runRequestBlock"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "runRequestBlock"
        }
      ]
    },
    {
      "definitionName": "runSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "runSync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runSync"
        }
      ]
    },
    {
      "definitionName": "runSyncExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "runSyncExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runSyncExit"
        }
      ]
    },
    {
      "definitionName": "runtime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "runtime"
        }
      ]
    },
    {
      "definitionName": "sandbox",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "sandbox"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "sandbox"
        }
      ]
    },
    {
      "definitionName": "schedule",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "schedule"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "schedule"
        }
      ]
    },
    {
      "definitionName": "scheduleForked",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "scheduleForked"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "scheduleForked"
        }
      ]
    },
    {
      "definitionName": "scheduleFrom",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "scheduleFrom"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "scheduleFrom"
        }
      ]
    },
    {
      "definitionName": "scope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "scope"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "scoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "scopeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "scopeWith"
        }
      ]
    },
    {
      "definitionName": "sequentialFinalizers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "sequentialFinalizers"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "sequentialFinalizers"
        }
      ]
    },
    {
      "definitionName": "serviceConstants",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceConstants"
        }
      ]
    },
    {
      "definitionName": "serviceFunction",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceFunction"
        }
      ]
    },
    {
      "definitionName": "serviceFunctionEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceFunctionEffect"
        }
      ]
    },
    {
      "definitionName": "serviceFunctions",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceFunctions"
        }
      ]
    },
    {
      "definitionName": "serviceMembers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceMembers"
        }
      ]
    },
    {
      "definitionName": "serviceOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "serviceOption"
        }
      ]
    },
    {
      "definitionName": "setClock",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setClock"
        }
      ]
    },
    {
      "definitionName": "setConfigProvider",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "setConfigProvider"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "setConfigProvider"
        }
      ]
    },
    {
      "definitionName": "setFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "setFiberRefs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "setFiberRefs"
        }
      ]
    },
    {
      "definitionName": "setParentSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Tracer/ParentSpan",
          "name": "setParentSpan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Tracer/ParentSpan.Ops",
          "name": "setParentSpan"
        }
      ]
    },
    {
      "definitionName": "setRequestBatching",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setRequestBatching"
        }
      ]
    },
    {
      "definitionName": "setRequestCache",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Request/Cache",
          "name": "setRequestCache"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Request/Cache.Ops",
          "name": "setRequestCache"
        }
      ]
    },
    {
      "definitionName": "setRequestCaching",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setRequestCaching"
        }
      ]
    },
    {
      "definitionName": "setScheduler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Scheduler",
          "name": "setScheduler"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "setScheduler"
        }
      ]
    },
    {
      "definitionName": "setSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setSpan"
        }
      ]
    },
    {
      "definitionName": "setTracer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Tracer",
          "name": "setTracer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Tracer.Ops",
          "name": "setTracer"
        }
      ]
    },
    {
      "definitionName": "setTracerTiming",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setTracerTiming"
        }
      ]
    },
    {
      "definitionName": "setUnhandledErrorLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "setUnhandledErrorLogLevel"
        }
      ]
    },
    {
      "definitionName": "sleep",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "sleep"
        }
      ]
    },
    {
      "definitionName": "spanAnnotations",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "spanAnnotations"
        }
      ]
    },
    {
      "definitionName": "spanLinks",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "spanLinks"
        }
      ]
    },
    {
      "definitionName": "step",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "step"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "step"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "succeedNone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "succeedNone"
        }
      ]
    },
    {
      "definitionName": "succeedSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "succeedSome"
        }
      ]
    },
    {
      "definitionName": "summarized",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "summarized"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "summarized"
        }
      ]
    },
    {
      "definitionName": "supervised",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "supervised"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "supervised"
        }
      ]
    },
    {
      "definitionName": "suspend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "suspend"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "tagMetrics",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tagMetrics"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tagMetrics"
        }
      ]
    },
    {
      "definitionName": "tagMetricsScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tagMetricsScoped"
        }
      ]
    },
    {
      "definitionName": "takeUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "takeUntil"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "takeUntil"
        }
      ]
    },
    {
      "definitionName": "takeWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "takeWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "takeWhile"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Context/Tag",
          "kind": "fluent",
          "name": "tap"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "tapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tapBoth"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tapBoth"
        }
      ]
    },
    {
      "definitionName": "tapDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tapDefect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tapDefect"
        }
      ]
    },
    {
      "definitionName": "tapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tapError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tapError"
        }
      ]
    },
    {
      "definitionName": "tapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tapErrorCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tapErrorCause"
        }
      ]
    },
    {
      "definitionName": "tapErrorTag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tapErrorTag"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tapErrorTag"
        }
      ]
    },
    {
      "definitionName": "timed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "timed"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timed"
        }
      ]
    },
    {
      "definitionName": "timedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "timedWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timedWith"
        }
      ]
    },
    {
      "definitionName": "timeout",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "timeout"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timeout"
        }
      ]
    },
    {
      "definitionName": "timeoutFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "timeoutFail"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timeoutFail"
        }
      ]
    },
    {
      "definitionName": "timeoutFailCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "timeoutFailCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timeoutFailCause"
        }
      ]
    },
    {
      "definitionName": "timeoutTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "timeoutTo"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "timeoutTo"
        }
      ]
    },
    {
      "definitionName": "tracer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tracer"
        }
      ]
    },
    {
      "definitionName": "tracerWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tracerWith"
        }
      ]
    },
    {
      "definitionName": "transplant",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "transplant"
        }
      ]
    },
    {
      "definitionName": "tryMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tryMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tryMap"
        }
      ]
    },
    {
      "definitionName": "tryMapPromise",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "tryMapPromise"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tryMapPromise"
        }
      ]
    },
    {
      "definitionName": "tryPromise",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "tryPromise"
        }
      ]
    },
    {
      "definitionName": "unified",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unified"
        }
      ]
    },
    {
      "definitionName": "unifiedFn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unifiedFn"
        }
      ]
    },
    {
      "definitionName": "uninterruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "uninterruptible"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "uninterruptible"
        }
      ]
    },
    {
      "definitionName": "uninterruptibleMask",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "uninterruptibleMask"
        }
      ]
    },
    {
      "definitionName": "unit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unit"
        }
      ]
    },
    {
      "definitionName": "unless",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "unless"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unless"
        }
      ]
    },
    {
      "definitionName": "unlessEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "unlessEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unlessEffect"
        }
      ]
    },
    {
      "definitionName": "unsafeMakeSemaphore",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect/Semaphore.Ops",
          "kind": "static",
          "name": "unsafeMake"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unsafeMakeSemaphore"
        }
      ]
    },
    {
      "definitionName": "unsandbox",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsandbox"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "unsandbox"
        }
      ]
    },
    {
      "definitionName": "updateFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "updateFiberRefs"
        }
      ]
    },
    {
      "definitionName": "updateService",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "updateService"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "updateService"
        }
      ]
    },
    {
      "definitionName": "useSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "useSpan"
        }
      ]
    },
    {
      "definitionName": "useSpanScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "useSpanScoped"
        }
      ]
    },
    {
      "definitionName": "using",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "using"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "using"
        }
      ]
    },
    {
      "definitionName": "validate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "validate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "validate"
        }
      ]
    },
    {
      "definitionName": "validateAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "validateAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "validateAll"
        }
      ]
    },
    {
      "definitionName": "validateFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "validateFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "validateFirst"
        }
      ]
    },
    {
      "definitionName": "validateWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "validateWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "validateWith"
        }
      ]
    },
    {
      "definitionName": "when",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "when"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "when"
        }
      ]
    },
    {
      "definitionName": "whenEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "whenEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "whenEffect"
        }
      ]
    },
    {
      "definitionName": "whenFiberRef",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "whenFiberRef"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "whenFiberRef"
        }
      ]
    },
    {
      "definitionName": "whenRef",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "whenRef"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "whenRef"
        }
      ]
    },
    {
      "definitionName": "whileLoop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "whileLoop"
        }
      ]
    },
    {
      "definitionName": "withClock",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withClock"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withClock"
        }
      ]
    },
    {
      "definitionName": "withClockScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withClockScoped"
        }
      ]
    },
    {
      "definitionName": "withConcurrency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withConcurrency"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withConcurrency"
        }
      ]
    },
    {
      "definitionName": "withConfigProvider",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withConfigProvider"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withConfigProvider"
        }
      ]
    },
    {
      "definitionName": "withConfigProviderScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ConfigProvider",
          "name": "withConfigProviderScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ConfigProvider.Ops",
          "name": "withConfigProviderScoped"
        }
      ]
    },
    {
      "definitionName": "withEarlyRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "withEarlyRelease"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withEarlyRelease"
        }
      ]
    },
    {
      "definitionName": "withLogSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withLogSpan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withLogSpan"
        }
      ]
    },
    {
      "definitionName": "withMaxOpsBeforeYield",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withMaxOpsBeforeYield"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withMaxOpsBeforeYield"
        }
      ]
    },
    {
      "definitionName": "withMetric",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withMetric"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withMetric"
        }
      ]
    },
    {
      "definitionName": "withParentSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withParentSpan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withParentSpan"
        }
      ]
    },
    {
      "definitionName": "withParentSpanScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Tracer/ParentSpan",
          "name": "withParentSpanScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Tracer/ParentSpan.Ops",
          "name": "withParentSpanScoped"
        }
      ]
    },
    {
      "definitionName": "withRequestBatching",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withRequestBatching"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withRequestBatching"
        }
      ]
    },
    {
      "definitionName": "withRequestCache",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withRequestCache"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withRequestCache"
        }
      ]
    },
    {
      "definitionName": "withRequestCaching",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withRequestCaching"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withRequestCaching"
        }
      ]
    },
    {
      "definitionName": "withRuntimeFlagsPatch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withRuntimeFlagsPatch"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withRuntimeFlagsPatch"
        }
      ]
    },
    {
      "definitionName": "withRuntimeFlagsPatchScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "withRuntimeFlagsPatchScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "withRuntimeFlagsPatchScoped"
        }
      ]
    },
    {
      "definitionName": "withScheduler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withScheduler"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withScheduler"
        }
      ]
    },
    {
      "definitionName": "withSchedulingPriority",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withSchedulingPriority"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withSchedulingPriority"
        }
      ]
    },
    {
      "definitionName": "withSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withSpan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withSpan"
        }
      ]
    },
    {
      "definitionName": "withSpanScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withSpanScoped"
        }
      ]
    },
    {
      "definitionName": "withTracer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withTracer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withTracer"
        }
      ]
    },
    {
      "definitionName": "withTracerScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Tracer",
          "name": "withTracerScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Tracer.Ops",
          "name": "withTracerScoped"
        }
      ]
    },
    {
      "definitionName": "withTracerTiming",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withTracerTiming"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withTracerTiming"
        }
      ]
    },
    {
      "definitionName": "withUnhandledErrorLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "withUnhandledErrorLogLevel"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "withUnhandledErrorLogLevel"
        }
      ]
    },
    {
      "definitionName": "yieldNow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "yieldNow"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "+"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "<"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "zipLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": ">"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "zipRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "zipWith"
        }
      ]
    }
  ],
  "effect/ExecutionStrategy": [
    {
      "definitionName": "ExecutionStrategy",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy.Ops"
        }
      ]
    },
    {
      "definitionName": "Parallel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy/Parallel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy/Parallel.Ops"
        }
      ]
    },
    {
      "definitionName": "ParallelN",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy/ParallelN"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy/ParallelN.Ops"
        }
      ]
    },
    {
      "definitionName": "Sequential",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy/Sequential"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy/Sequential.Ops"
        }
      ]
    },
    {
      "definitionName": "isParallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isParallel"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "isParallel"
        }
      ]
    },
    {
      "definitionName": "isParallelN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isParallelN"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "isParallelN"
        }
      ]
    },
    {
      "definitionName": "isSequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isSequential"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "isSequential"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "parallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "parallel"
        }
      ]
    },
    {
      "definitionName": "parallelN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "parallelN"
        }
      ]
    },
    {
      "definitionName": "sequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ExecutionStrategy.Ops",
          "name": "sequential"
        }
      ]
    }
  ],
  "effect/Exit": [
    {
      "definitionName": "Exit",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit.Ops"
        }
      ]
    },
    {
      "definitionName": "ExitUnify",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit.Unify"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit.Unify.Ops"
        }
      ]
    },
    {
      "definitionName": "ExitUnifyBlackList",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit.UnifyBlackList"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit.UnifyBlackList.Ops"
        }
      ]
    },
    {
      "definitionName": "Failure",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit/Failure"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit/Failure.Ops"
        }
      ]
    },
    {
      "definitionName": "Success",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit/Success"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit/Success.Ops"
        }
      ]
    },
    {
      "definitionName": "all",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "all"
        },
        {
          "kind": "static",
          "typeName": "Iterable.Ops",
          "name": "all"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "as"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "asUnit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "causeOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "causeOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "causeOption"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "exists"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatMapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "flatMapEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "flatMapEffect"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "flatten"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "forEachEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "forEachEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "forEachEffect"
        }
      ]
    },
    {
      "definitionName": "fromEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "fromEither"
        }
      ]
    },
    {
      "definitionName": "fromOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "fromOption"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "getOrElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "interrupt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "isExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "isExit"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "isFailure"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isInterrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "isInterrupted"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "isInterrupted"
        }
      ]
    },
    {
      "definitionName": "isSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "isSuccess"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "isSuccess"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "mapBoth"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "mapBoth"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "mapError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "mapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "mapErrorCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "mapErrorCause"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "matchEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "matchEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "matchEffect"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "unit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "unit"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipPar"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipPar"
        }
      ]
    },
    {
      "definitionName": "zipParLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipParLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipParLeft"
        }
      ]
    },
    {
      "definitionName": "zipParRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipParRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipParRight"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Exit",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "zipWith"
        }
      ]
    }
  ],
  "effect/Fiber": [
    {
      "definitionName": "Fiber",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "RuntimeFiber",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/RuntimeFiber"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/RuntimeFiber.Ops"
        }
      ]
    },
    {
      "definitionName": "RuntimeFiberTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/RuntimeFiberTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/RuntimeFiberTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.TypeId.Ops",
          "name": "FiberTypeId"
        }
      ]
    },
    {
      "definitionName": "RuntimeFiberTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber/RuntimeFiberTypeId.Ops",
          "name": "RuntimeFiberTypeId"
        }
      ]
    },
    {
      "definitionName": "all",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "all"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "all"
        }
      ]
    },
    {
      "definitionName": "awaitAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "awaitAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "awaitAll"
        }
      ]
    },
    {
      "definitionName": "children",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "children"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "children"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "done"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Exit.Ops",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "dump",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/RuntimeFiber",
          "name": "dump"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber/RuntimeFiber.Ops",
          "name": "dump"
        }
      ]
    },
    {
      "definitionName": "dumpAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "dumpAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "dumpAll"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Cause.Ops",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "fromEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "fromEffect"
        }
      ]
    },
    {
      "definitionName": "getCurrentFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "getCurrentFiber"
        }
      ]
    },
    {
      "definitionName": "id",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "id"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "id"
        }
      ]
    },
    {
      "definitionName": "inheritAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "inheritAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "inheritAll"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "interrupt"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "interruptAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "interruptAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interruptAll"
        }
      ]
    },
    {
      "definitionName": "interruptAllAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "Iterable",
          "name": "interruptAllAs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interruptAllAs"
        }
      ]
    },
    {
      "definitionName": "interruptAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "interruptAs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "interruptAs"
        }
      ]
    },
    {
      "definitionName": "interruptAsFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "interruptAsFork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "interruptAsFork"
        }
      ]
    },
    {
      "definitionName": "interrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "interrupted"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "interrupted"
        }
      ]
    },
    {
      "definitionName": "interruptFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "interruptFork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "interruptFork"
        }
      ]
    },
    {
      "definitionName": "isFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "isFiber"
        }
      ]
    },
    {
      "definitionName": "isRuntimeFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "isRuntimeFiber"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "isRuntimeFiber"
        }
      ]
    },
    {
      "definitionName": "join",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "join"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "join"
        }
      ]
    },
    {
      "definitionName": "joinAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "joinAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "joinAll"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "mapEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "mapEffect"
        }
      ]
    },
    {
      "definitionName": "mapFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "mapFiber"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "mapFiber"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "never",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "never"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "orElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "orElseEither"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "poll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pretty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/RuntimeFiber",
          "name": "pretty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber/RuntimeFiber.Ops",
          "name": "pretty"
        }
      ]
    },
    {
      "definitionName": "roots",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "roots"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "scoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "status",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/RuntimeFiber",
          "name": "status"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber/RuntimeFiber.Ops",
          "name": "status"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "unit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "unit"
        }
      ]
    },
    {
      "definitionName": "unsafeRoots",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "unsafeRoots"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "zipLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "zipRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber.Ops",
          "name": "zipWith"
        }
      ]
    }
  ],
  "effect/FiberId": [
    {
      "definitionName": "Composite",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberId/Composite"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberId/Composite.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberId.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberIdTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberId.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberId.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberId/None"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberId/None.Ops"
        }
      ]
    },
    {
      "definitionName": "Runtime",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberId/Runtime"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberId/Runtime.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberIdTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.TypeId.Ops",
          "name": "FiberIdTypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "combineAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "combineAll"
        }
      ]
    },
    {
      "definitionName": "composite",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "composite"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "composite"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "getOrElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "ids",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "ids"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "ids"
        }
      ]
    },
    {
      "definitionName": "isComposite",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "isComposite"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "isComposite"
        }
      ]
    },
    {
      "definitionName": "isFiberId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "isFiberId"
        }
      ]
    },
    {
      "definitionName": "isNone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "isNone"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "isNone"
        }
      ]
    },
    {
      "definitionName": "isRuntime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberId",
          "name": "isRuntime"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "isRuntime"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "runtime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "runtime"
        }
      ]
    },
    {
      "definitionName": "threadName",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "threadName"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "threadName"
        }
      ]
    },
    {
      "definitionName": "toOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "toOption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "toOption"
        }
      ]
    },
    {
      "definitionName": "toSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberId",
          "name": "toSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "toSet"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberId.Ops",
          "name": "unsafeMake"
        }
      ]
    }
  ],
  "effect/FiberRef": [
    {
      "definitionName": "FiberRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberRefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Variance",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef/Variance"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef/Variance.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberRefTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.TypeId.Ops",
          "name": "FiberRefTypeId"
        }
      ]
    },
    {
      "definitionName": "currentContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentContext"
        }
      ]
    },
    {
      "definitionName": "currentLogAnnotations",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentLogAnnotations"
        }
      ]
    },
    {
      "definitionName": "currentLoggers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentLoggers"
        }
      ]
    },
    {
      "definitionName": "currentLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentLogLevel"
        }
      ]
    },
    {
      "definitionName": "currentLogSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentLogSpan"
        }
      ]
    },
    {
      "definitionName": "currentMaxOpsBeforeYield",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentMaxOpsBeforeYield"
        }
      ]
    },
    {
      "definitionName": "currentMetricLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentMetricLabels"
        }
      ]
    },
    {
      "definitionName": "currentMinimumLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentMinimumLogLevel"
        }
      ]
    },
    {
      "definitionName": "currentRequestBatchingEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentRequestBatchingEnabled"
        }
      ]
    },
    {
      "definitionName": "currentRequestCache",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentRequestCache"
        }
      ]
    },
    {
      "definitionName": "currentRequestCacheEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentRequestCacheEnabled"
        }
      ]
    },
    {
      "definitionName": "currentRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "currentScheduler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentScheduler"
        }
      ]
    },
    {
      "definitionName": "currentSchedulingPriority",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentSchedulingPriority"
        }
      ]
    },
    {
      "definitionName": "currentSupervisor",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentSupervisor"
        }
      ]
    },
    {
      "definitionName": "currentTracerSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentTracerSpan"
        }
      ]
    },
    {
      "definitionName": "currentTracerSpanAnnotations",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentTracerSpanAnnotations"
        }
      ]
    },
    {
      "definitionName": "currentTracerSpanLinks",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentTracerSpanLinks"
        }
      ]
    },
    {
      "definitionName": "currentTracerTimingEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentTracerTimingEnabled"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRef",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "getAndSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "getAndUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "getAndUpdateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "getWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "getWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "getWith"
        }
      ]
    },
    {
      "definitionName": "interruptedCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "interruptedCause"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "makeContext"
        }
      ]
    },
    {
      "definitionName": "makeRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "makeRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "makeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "makeWith"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "modifySome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "reset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRef",
          "name": "reset"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "reset"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "unhandledErrorLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unhandledErrorLogLevel"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unsafeMake"
        }
      ]
    },
    {
      "definitionName": "unsafeMakeContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unsafeMakeContext"
        }
      ]
    },
    {
      "definitionName": "unsafeMakeHashSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unsafeMakeHashSet"
        }
      ]
    },
    {
      "definitionName": "unsafeMakePatch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unsafeMakePatch"
        }
      ]
    },
    {
      "definitionName": "unsafeMakeSupervisor",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "unsafeMakeSupervisor"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "update"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "updateAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "updateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRef",
          "name": "updateSomeAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "updateSomeAndGet"
        }
      ]
    }
  ],
  "effect/FiberRefs": [
    {
      "definitionName": "FiberRefs",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberRefsSym",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs.Sym"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs.Sym.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberRefsSym",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Sym.Ops",
          "name": "FiberRefsSym"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "fiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "fiberRefs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "fiberRefs"
        }
      ]
    },
    {
      "definitionName": "forkAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "forkAs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "forkAs"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getOrDefault",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "getOrDefault"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "getOrDefault"
        }
      ]
    },
    {
      "definitionName": "joinAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "joinAs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "joinAs"
        }
      ]
    },
    {
      "definitionName": "setAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "setAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "setAll"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "unsafeMake"
        }
      ]
    },
    {
      "definitionName": "updatedAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "updatedAs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "updatedAs"
        }
      ]
    }
  ],
  "effect/FiberRefsPatch": [
    {
      "definitionName": "Add",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch/Add"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch/Add.Ops"
        }
      ]
    },
    {
      "definitionName": "AndThen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch/AndThen"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch/AndThen.Ops"
        }
      ]
    },
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch/Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch/Empty.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberRefsPatch",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "Remove",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch/Remove"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch/Remove.Ops"
        }
      ]
    },
    {
      "definitionName": "Update",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefsPatch/Update"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefsPatch/Update.Ops"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefsPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefsPatch.Ops",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefs",
          "name": "diff"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefs.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefsPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberRefsPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberRefsPatch.Ops",
          "name": "patch"
        }
      ]
    }
  ],
  "effect/FiberStatus": [
    {
      "definitionName": "Done",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberStatus/Done"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberStatus/Done.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberStatus",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberStatus"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberStatus.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberStatusTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberStatus.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberStatus.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Running",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberStatus/Running"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberStatus/Running.Ops"
        }
      ]
    },
    {
      "definitionName": "Suspended",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberStatus/Suspended"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberStatus/Suspended.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberStatusTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.TypeId.Ops",
          "name": "FiberStatusTypeId"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.Ops",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberStatus",
          "name": "isDone"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.Ops",
          "name": "isDone"
        }
      ]
    },
    {
      "definitionName": "isFiberStatus",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.Ops",
          "name": "isFiberStatus"
        }
      ]
    },
    {
      "definitionName": "isRunning",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberStatus",
          "name": "isRunning"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.Ops",
          "name": "isRunning"
        }
      ]
    },
    {
      "definitionName": "isSuspended",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/FiberStatus",
          "name": "isSuspended"
        },
        {
          "kind": "static",
          "typeName": "effect/io/FiberStatus.Ops",
          "name": "isSuspended"
        }
      ]
    },
    {
      "definitionName": "running",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlags",
          "name": "running"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "running"
        }
      ]
    },
    {
      "definitionName": "suspended",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "suspended"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "suspended"
        }
      ]
    }
  ],
  "effect/Hub": [
    {
      "definitionName": "Hub",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Hub"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Hub.Ops"
        }
      ]
    },
    {
      "definitionName": "awaitShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "awaitShutdown"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "awaitShutdown"
        }
      ]
    },
    {
      "definitionName": "bounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "bounded"
        }
      ]
    },
    {
      "definitionName": "capacity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "capacity"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "capacity"
        }
      ]
    },
    {
      "definitionName": "dropping",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "dropping"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isFull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isFull"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "isFull"
        }
      ]
    },
    {
      "definitionName": "isShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isShutdown"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "isShutdown"
        }
      ]
    },
    {
      "definitionName": "publish",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Hub",
          "name": "publish"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "publish"
        }
      ]
    },
    {
      "definitionName": "publishAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Hub",
          "name": "publishAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "publishAll"
        }
      ]
    },
    {
      "definitionName": "shutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "shutdown"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "shutdown"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "sliding",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "sliding"
        }
      ]
    },
    {
      "definitionName": "subscribe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "subscribe"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "subscribe"
        }
      ]
    },
    {
      "definitionName": "unbounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Hub.Ops",
          "name": "unbounded"
        }
      ]
    }
  ],
  "effect/KeyedPool": [
    {
      "definitionName": "KeyedPool",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/KeyedPool"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/KeyedPool.Ops"
        }
      ]
    },
    {
      "definitionName": "KeyedPoolTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/KeyedPool.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/KeyedPool.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "KeyedPoolTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.TypeId.Ops",
          "name": "KeyedPoolTypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/KeyedPool",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "invalidate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/KeyedPool",
          "name": "invalidate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "invalidate"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "makeWith"
        }
      ]
    },
    {
      "definitionName": "makeWithTTL",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "makeWithTTL"
        }
      ]
    },
    {
      "definitionName": "makeWithTTLBy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/KeyedPool.Ops",
          "name": "makeWithTTLBy"
        }
      ]
    }
  ],
  "effect/Layer": [
    {
      "definitionName": "Layer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Layer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Layer.Ops"
        }
      ]
    },
    {
      "definitionName": "LayerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Layer.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Layer.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "LayerTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.TypeId.Ops",
          "name": "LayerTypeId"
        }
      ]
    },
    {
      "definitionName": "build",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "build"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "build"
        }
      ]
    },
    {
      "definitionName": "effect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "toLayer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "toLayer"
        }
      ]
    },
    {
      "definitionName": "effectContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "toLayerContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "toLayerContext"
        }
      ]
    },
    {
      "definitionName": "effectDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "toLayerDiscard"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "toLayerDiscard"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "toLayerScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "toLayerScoped"
        }
      ]
    },
    {
      "definitionName": "scopedDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "toLayerScopedDiscard"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "toLayerScopedDiscard"
        }
      ]
    },
    {
      "definitionName": "buildWithScope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "buildWithScope"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "buildWithScope"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "catchAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "catchAllCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "catchAllCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "catchAllCause"
        }
      ]
    },
    {
      "definitionName": "context",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "context"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "dieSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "dieSync"
        }
      ]
    },
    {
      "definitionName": "discard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "discard"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "discard"
        }
      ]
    },
    {
      "definitionName": "effect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "effect"
        }
      ]
    },
    {
      "definitionName": "effectContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "effectContext"
        }
      ]
    },
    {
      "definitionName": "effectDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "effectDiscard"
        }
      ]
    },
    {
      "definitionName": "extendScope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "extendScope"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "extendScope"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "failCauseSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "failCauseSync"
        }
      ]
    },
    {
      "definitionName": "failSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "failSync"
        }
      ]
    },
    {
      "definitionName": "fiberRefLocallyScopedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "fiberRefLocallyScopedWith"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "flatten"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "fresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "fresh"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "fresh"
        }
      ]
    },
    {
      "definitionName": "isFresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "isFresh"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "isFresh"
        }
      ]
    },
    {
      "definitionName": "isLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "isLayer"
        }
      ]
    },
    {
      "definitionName": "launch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "launch"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "launch"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "locally"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "locally"
        }
      ]
    },
    {
      "definitionName": "locallyEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "locallyEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "locallyEffect"
        }
      ]
    },
    {
      "definitionName": "locallyScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "locallyScoped"
        }
      ]
    },
    {
      "definitionName": "locallyWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "locallyWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "locallyWith"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "mapError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "match"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "matchCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "matchCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "matchCause"
        }
      ]
    },
    {
      "definitionName": "memoize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "memoize"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "memoize"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": "+"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "merge"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "mergeAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "mergeAll"
        }
      ]
    },
    {
      "definitionName": "orDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "orDie"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "orDie"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": "|"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "orElse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "passthrough",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "passthrough"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "passthrough"
        }
      ]
    },
    {
      "definitionName": "project",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "project"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "project"
        }
      ]
    },
    {
      "definitionName": "provide",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": ">>"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "provide"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "provide"
        }
      ]
    },
    {
      "definitionName": "provideMerge",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": ">"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "provideMerge"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "provideMerge"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "retry"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "scope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "scope"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "scopedContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "scopedContext"
        }
      ]
    },
    {
      "definitionName": "scopedDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "scopedDiscard"
        }
      ]
    },
    {
      "definitionName": "service",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "service"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "succeedContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "succeedContext"
        }
      ]
    },
    {
      "definitionName": "suspend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "suspend"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Layer.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "syncContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "syncContext"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "tap"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "tapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "tapError"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "tapError"
        }
      ]
    },
    {
      "definitionName": "tapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "tapErrorCause"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "tapErrorCause"
        }
      ]
    },
    {
      "definitionName": "toRuntime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "toRuntime"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "toRuntime"
        }
      ]
    },
    {
      "definitionName": "unwrapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "unwrapEffect"
        }
      ]
    },
    {
      "definitionName": "unwrapScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "unwrapScoped"
        }
      ]
    },
    {
      "definitionName": "use",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "use"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "use"
        }
      ]
    },
    {
      "definitionName": "useMerge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "useMerge"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "useMerge"
        }
      ]
    },
    {
      "definitionName": "zipWithPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Layer",
          "name": "zipWithPar"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Layer.Ops",
          "name": "zipWithPar"
        }
      ]
    }
  ],
  "effect/Logger": [
    {
      "definitionName": "AnnotationValue",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/AnnotationValue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/AnnotationValue.Ops"
        }
      ]
    },
    {
      "definitionName": "Logger",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger.Ops"
        }
      ]
    },
    {
      "definitionName": "LoggerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "LoggerTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.TypeId.Ops",
          "name": "LoggerTypeId"
        }
      ]
    },
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Logger",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "addEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "addEffect"
        }
      ]
    },
    {
      "definitionName": "addScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "addScoped"
        }
      ]
    },
    {
      "definitionName": "defaultLogger",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "defaultLogger"
        }
      ]
    },
    {
      "definitionName": "filterLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "filterLogLevel"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "filterLogLevel"
        }
      ]
    },
    {
      "definitionName": "logfmtLogger",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "logfmtLogger"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "mapInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "mapInput"
        }
      ]
    },
    {
      "definitionName": "minimumLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "minimumLogLevel"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Logger",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "replace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "replace"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "replace"
        }
      ]
    },
    {
      "definitionName": "replaceEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "replaceEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "replaceEffect"
        }
      ]
    },
    {
      "definitionName": "replaceScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "replaceScoped"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "replaceScoped"
        }
      ]
    },
    {
      "definitionName": "simple",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "simple"
        }
      ]
    },
    {
      "definitionName": "stringLogger",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "stringLogger"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "test",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "test"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "test"
        }
      ]
    },
    {
      "definitionName": "tracerLogger",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "tracerLogger"
        }
      ]
    },
    {
      "definitionName": "withMinimumLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "withMinimumLogLevel"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "zipLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Logger",
          "name": "zipRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Logger.Ops",
          "name": "zipRight"
        }
      ]
    }
  ],
  "effect/LogLevel": [
    {
      "definitionName": "All",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/All"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/All.Ops"
        }
      ]
    },
    {
      "definitionName": "Debug",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Debug"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Debug.Ops"
        }
      ]
    },
    {
      "definitionName": "Error",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Error"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Error.Ops"
        }
      ]
    },
    {
      "definitionName": "Fatal",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Fatal"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Fatal.Ops"
        }
      ]
    },
    {
      "definitionName": "Info",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Info"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Info.Ops"
        }
      ]
    },
    {
      "definitionName": "Literal",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Literal"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Literal.Ops"
        }
      ]
    },
    {
      "definitionName": "LogLevel",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel.Ops"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/None"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/None.Ops"
        }
      ]
    },
    {
      "definitionName": "Trace",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Trace"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Trace.Ops"
        }
      ]
    },
    {
      "definitionName": "Warning",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogLevel/Warning"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogLevel/Warning.Ops"
        }
      ]
    },
    {
      "definitionName": "All",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "All"
        }
      ]
    },
    {
      "definitionName": "Debug",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Debug"
        }
      ]
    },
    {
      "definitionName": "Error",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Error"
        }
      ]
    },
    {
      "definitionName": "Fatal",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Fatal"
        }
      ]
    },
    {
      "definitionName": "Info",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Info"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "None"
        }
      ]
    },
    {
      "definitionName": "Trace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Trace"
        }
      ]
    },
    {
      "definitionName": "Warning",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "Warning"
        }
      ]
    },
    {
      "definitionName": "fromLiteral",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "fromLiteral"
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/LogLevel",
          "name": "greaterThan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "greaterThan"
        }
      ]
    },
    {
      "definitionName": "greaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/LogLevel",
          "name": "greaterThanEqual"
        },
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "greaterThanEqual"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/LogLevel",
          "name": "lessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "lessThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/LogLevel",
          "name": "lessThanEqual"
        },
        {
          "kind": "static",
          "typeName": "effect/io/LogLevel.Ops",
          "name": "lessThanEqual"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/FiberRef",
          "kind": "fluent",
          "name": "locally"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "locally"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "locally"
        }
      ]
    }
  ],
  "effect/LogSpan": [
    {
      "definitionName": "LogSpan",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/LogSpan"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/LogSpan.Ops"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/LogSpan.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/LogSpan",
          "name": "render"
        },
        {
          "kind": "static",
          "typeName": "effect/io/LogSpan.Ops",
          "name": "render"
        }
      ]
    }
  ],
  "effect/Metric": [
    {
      "definitionName": "Metric",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricApply",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric.Apply"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric.Apply.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.TypeId.Ops",
          "name": "MetricTypeId"
        }
      ]
    },
    {
      "definitionName": "counter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "counter"
        }
      ]
    },
    {
      "definitionName": "fiberActive",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberActive"
        }
      ]
    },
    {
      "definitionName": "fiberFailures",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberFailures"
        }
      ]
    },
    {
      "definitionName": "fiberLifetimes",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberLifetimes"
        }
      ]
    },
    {
      "definitionName": "fiberLifetimes",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberLifetimes"
        }
      ]
    },
    {
      "definitionName": "fiberStarted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberStarted"
        }
      ]
    },
    {
      "definitionName": "fiberSuccesses",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fiberSuccesses"
        }
      ]
    },
    {
      "definitionName": "frequency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "frequency"
        }
      ]
    },
    {
      "definitionName": "fromMetricKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "fromMetricKey"
        }
      ]
    },
    {
      "definitionName": "gauge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "gauge"
        }
      ]
    },
    {
      "definitionName": "globalMetricRegistry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricRegistry.Ops",
          "name": "globalMetricRegistry"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "increment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "increment"
        }
      ]
    },
    {
      "definitionName": "incrementBy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "incrementBy"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Apply.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "mapInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "mapInput"
        }
      ]
    },
    {
      "definitionName": "mapType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "mapType"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "mapType"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "summary"
        }
      ]
    },
    {
      "definitionName": "summaryTimestamp",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "summaryTimestamp"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "tagged"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "tagged"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "taggedWithLabels"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "taggedWithLabels"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabelsInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "taggedWithLabelsInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "taggedWithLabelsInput"
        }
      ]
    },
    {
      "definitionName": "timer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "timer"
        }
      ]
    },
    {
      "definitionName": "timerWithBoundaries",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "timerWithBoundaries"
        }
      ]
    },
    {
      "definitionName": "trackAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackAll"
        }
      ]
    },
    {
      "definitionName": "trackDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackDefect"
        }
      ]
    },
    {
      "definitionName": "trackDefectWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackDefectWith"
        }
      ]
    },
    {
      "definitionName": "trackDuration",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackDuration"
        }
      ]
    },
    {
      "definitionName": "trackDurationWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackDurationWith"
        }
      ]
    },
    {
      "definitionName": "trackError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackError"
        }
      ]
    },
    {
      "definitionName": "trackErrorWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackErrorWith"
        }
      ]
    },
    {
      "definitionName": "trackSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackSuccess"
        }
      ]
    },
    {
      "definitionName": "trackSuccessWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "trackSuccessWith"
        }
      ]
    },
    {
      "definitionName": "unsafeSnapshot",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "unsafeSnapshot"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "update"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "value",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric",
          "name": "value"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "value"
        }
      ]
    },
    {
      "definitionName": "withConstantInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "withConstantInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "withConstantInput"
        }
      ]
    },
    {
      "definitionName": "withNow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric",
          "name": "withNow"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "withNow"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Metric",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Metric.Ops",
          "name": "zip"
        }
      ]
    }
  ],
  "effect/MetricBoundaries": [
    {
      "definitionName": "MetricBoundaries",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricBoundaries"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricBoundaries.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricBoundariesTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricBoundaries.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricBoundaries.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricBoundariesTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.TypeId.Ops",
          "name": "MetricBoundariesTypeId"
        }
      ]
    },
    {
      "definitionName": "exponential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.Ops",
          "name": "exponential"
        }
      ]
    },
    {
      "definitionName": "fromChunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.Ops",
          "name": "fromChunk"
        }
      ]
    },
    {
      "definitionName": "isMetricBoundaries",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.Ops",
          "name": "isMetricBoundaries"
        }
      ]
    },
    {
      "definitionName": "linear",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.Ops",
          "name": "linear"
        }
      ]
    }
  ],
  "effect/MetricHook": [
    {
      "definitionName": "MetricHook",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricHook"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricHook.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricHookTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricHook.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricHook.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricHookTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.TypeId.Ops",
          "name": "MetricHookTypeId"
        }
      ]
    },
    {
      "definitionName": "counter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "counter"
        }
      ]
    },
    {
      "definitionName": "frequency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "frequency"
        }
      ]
    },
    {
      "definitionName": "gauge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "gauge"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "onUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricHook",
          "name": "onUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "onUpdate"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricHook.Ops",
          "name": "summary"
        }
      ]
    }
  ],
  "effect/MetricKey": [
    {
      "definitionName": "MetricKey",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKey"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKey.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKey.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKey.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.TypeId.Ops",
          "name": "MetricKeyTypeId"
        }
      ]
    },
    {
      "definitionName": "counter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "counter"
        }
      ]
    },
    {
      "definitionName": "frequency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "frequency"
        }
      ]
    },
    {
      "definitionName": "gauge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "gauge"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "isMetricKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "isMetricKey"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "summary"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricKey",
          "name": "tagged"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "tagged"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricKey",
          "name": "taggedWithLabels"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "taggedWithLabels"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabelSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricKey",
          "name": "taggedWithLabelSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricKey.Ops",
          "name": "taggedWithLabelSet"
        }
      ]
    }
  ],
  "effect/MetricKeyType": [
    {
      "definitionName": "CounterKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType/CounterKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType/CounterKeyTypeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "FrequencyKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType/FrequencyKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType/FrequencyKeyTypeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "GaugeKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType/GaugeKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType/GaugeKeyTypeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "HistogramKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType/HistogramKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType/HistogramKeyTypeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricKeyType",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "SummaryKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricKeyType/SummaryKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricKeyType/SummaryKeyTypeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "CounterKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType/CounterKeyTypeTypeId.Ops",
          "name": "CounterKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "FrequencyKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType/FrequencyKeyTypeTypeId.Ops",
          "name": "FrequencyKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "GaugeKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType/GaugeKeyTypeTypeId.Ops",
          "name": "GaugeKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "HistogramKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType/HistogramKeyTypeTypeId.Ops",
          "name": "HistogramKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.TypeId.Ops",
          "name": "MetricKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "SummaryKeyTypeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType/SummaryKeyTypeTypeId.Ops",
          "name": "SummaryKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/MetricBoundaries",
          "name": "histogram"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricBoundaries.Ops",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "isCounterKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isCounterKey"
        }
      ]
    },
    {
      "definitionName": "isFrequencyKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isFrequencyKey"
        }
      ]
    },
    {
      "definitionName": "isGaugeKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isGaugeKey"
        }
      ]
    },
    {
      "definitionName": "isHistogramKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isHistogramKey"
        }
      ]
    },
    {
      "definitionName": "isMetricKeyType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isMetricKeyType"
        }
      ]
    },
    {
      "definitionName": "isSummaryKey",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "isSummaryKey"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricKeyType.Ops",
          "name": "summary"
        }
      ]
    }
  ],
  "effect/MetricLabel": [
    {
      "definitionName": "MetricLabel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricLabel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricLabel.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricLabelTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricLabel.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricLabel.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricLabelTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricLabel.TypeId.Ops",
          "name": "MetricLabelTypeId"
        }
      ]
    },
    {
      "definitionName": "isMetricLabel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricLabel.Ops",
          "name": "isMetricLabel"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricLabel.Ops",
          "name": "make"
        }
      ]
    }
  ],
  "effect/MetricPair": [
    {
      "definitionName": "MetricPair",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricPair"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricPair.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricPairTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricPair.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricPair.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricPairTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPair.TypeId.Ops",
          "name": "MetricPairTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPair.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPair.Ops",
          "name": "unsafeMake"
        }
      ]
    }
  ],
  "effect/MetricPolling": [
    {
      "definitionName": "PollingMetric",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricPolling/PollingMetric"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops"
        }
      ]
    },
    {
      "definitionName": "PollingMetricTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricPolling/PollingMetricTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricPolling/PollingMetricTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "PollingMetricTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetricTypeId.Ops",
          "name": "PollingMetricTypeId"
        }
      ]
    },
    {
      "definitionName": "collectAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling.Ops",
          "name": "collectAll"
        }
      ]
    },
    {
      "definitionName": "launch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricPolling/PollingMetric",
          "name": "launch"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops",
          "name": "launch"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/MetricPolling/PollingMetric",
          "name": "poll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pollAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/MetricPolling/PollingMetric",
          "name": "pollAndUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops",
          "name": "pollAndUpdate"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricPolling/PollingMetric",
          "name": "retry"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/MetricPolling/PollingMetric",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/io/MetricPolling/PollingMetric.Ops",
          "name": "zip"
        }
      ]
    }
  ],
  "effect/MetricRegistry": [
    {
      "definitionName": "MetricRegistry",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricRegistry"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricRegistry.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricRegistryTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricRegistry.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricRegistry.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricRegistryTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricRegistry.TypeId.Ops",
          "name": "MetricRegistryTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricRegistry.Ops",
          "name": "make"
        }
      ]
    }
  ],
  "effect/MetricState": [
    {
      "definitionName": "CounterStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState/CounterStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState/CounterStateTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "FrequencyStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState/FrequencyStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState/FrequencyStateTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "GaugeStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState/GaugeStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState/GaugeStateTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "HistogramStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState/HistogramStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState/HistogramStateTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricState",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState.Ops"
        }
      ]
    },
    {
      "definitionName": "MetricStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "SummaryStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/MetricState/SummaryStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/MetricState/SummaryStateTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "CounterStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState/CounterStateTypeId.Ops",
          "name": "CounterStateTypeId"
        }
      ]
    },
    {
      "definitionName": "FrequencyStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState/FrequencyStateTypeId.Ops",
          "name": "FrequencyStateTypeId"
        }
      ]
    },
    {
      "definitionName": "GaugeStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState/GaugeStateTypeId.Ops",
          "name": "GaugeStateTypeId"
        }
      ]
    },
    {
      "definitionName": "HistogramStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState/HistogramStateTypeId.Ops",
          "name": "HistogramStateTypeId"
        }
      ]
    },
    {
      "definitionName": "MetricStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.TypeId.Ops",
          "name": "MetricStateTypeId"
        }
      ]
    },
    {
      "definitionName": "SummaryStateTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState/SummaryStateTypeId.Ops",
          "name": "SummaryStateTypeId"
        }
      ]
    },
    {
      "definitionName": "counter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "counter"
        }
      ]
    },
    {
      "definitionName": "frequency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "frequency"
        }
      ]
    },
    {
      "definitionName": "gauge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "gauge"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "isCounterState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isCounterState"
        }
      ]
    },
    {
      "definitionName": "isFrequencyState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isFrequencyState"
        }
      ]
    },
    {
      "definitionName": "isGaugeState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isGaugeState"
        }
      ]
    },
    {
      "definitionName": "isHistogramState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isHistogramState"
        }
      ]
    },
    {
      "definitionName": "isMetricState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isMetricState"
        }
      ]
    },
    {
      "definitionName": "isSummaryState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "isSummaryState"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/MetricState.Ops",
          "name": "summary"
        }
      ]
    }
  ],
  "effect/Pool": [
    {
      "definitionName": "Pool",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Pool"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Pool.Ops"
        }
      ]
    },
    {
      "definitionName": "PoolTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Pool.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Pool.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "PoolTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Pool.TypeId.Ops",
          "name": "PoolTypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Pool",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Pool.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "invalidate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Pool",
          "name": "invalidate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Pool.Ops",
          "name": "invalidate"
        }
      ]
    },
    {
      "definitionName": "isPool",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Pool.Ops",
          "name": "isPool"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Pool.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeWithTTL",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Pool.Ops",
          "name": "makeWithTTL"
        }
      ]
    }
  ],
  "effect/Queue": [
    {
      "definitionName": "BackingQueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/BackingQueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/BackingQueue.Ops"
        }
      ]
    },
    {
      "definitionName": "BaseQueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/BaseQueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/BaseQueue.Ops"
        }
      ]
    },
    {
      "definitionName": "Dequeue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/Dequeue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/Dequeue.Ops"
        }
      ]
    },
    {
      "definitionName": "DequeueTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/DequeueTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/DequeueTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Enqueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/Enqueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/Enqueue.Ops"
        }
      ]
    },
    {
      "definitionName": "EnqueueTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/EnqueueTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/EnqueueTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Queue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.Ops"
        }
      ]
    },
    {
      "definitionName": "QueueStrategyTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.StrategyTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.StrategyTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Strategy",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue/Strategy"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue/Strategy.Ops"
        }
      ]
    },
    {
      "definitionName": "DequeueTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue/DequeueTypeId.Ops",
          "name": "DequeueTypeId"
        }
      ]
    },
    {
      "definitionName": "EnqueueTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue/EnqueueTypeId.Ops",
          "name": "EnqueueTypeId"
        }
      ]
    },
    {
      "definitionName": "QueueStrategyTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.StrategyTypeId.Ops",
          "name": "QueueStrategyTypeId"
        }
      ]
    },
    {
      "definitionName": "awaitShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "awaitShutdown"
        }
      ]
    },
    {
      "definitionName": "backPressureStrategy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "backPressureStrategy"
        }
      ]
    },
    {
      "definitionName": "bounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "bounded"
        }
      ]
    },
    {
      "definitionName": "capacity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "capacity"
        }
      ]
    },
    {
      "definitionName": "dropping",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "dropping"
        }
      ]
    },
    {
      "definitionName": "droppingStrategy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "droppingStrategy"
        }
      ]
    },
    {
      "definitionName": "isDequeue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isDequeue"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isEnqueue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isEnqueue"
        }
      ]
    },
    {
      "definitionName": "isFull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isFull"
        }
      ]
    },
    {
      "definitionName": "isQueue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isQueue"
        }
      ]
    },
    {
      "definitionName": "isShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "isShutdown"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "offer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Enqueue",
          "name": "offer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Enqueue.Ops",
          "name": "offer"
        }
      ]
    },
    {
      "definitionName": "offerAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Enqueue",
          "name": "offerAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Enqueue.Ops",
          "name": "offerAll"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "poll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "shutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "shutdown"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "sliding",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "sliding"
        }
      ]
    },
    {
      "definitionName": "slidingStrategy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "slidingStrategy"
        }
      ]
    },
    {
      "definitionName": "take",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "take"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "take"
        }
      ]
    },
    {
      "definitionName": "takeAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "takeAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "takeAll"
        }
      ]
    },
    {
      "definitionName": "takeBetween",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "takeBetween"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "takeBetween"
        }
      ]
    },
    {
      "definitionName": "takeN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "takeN"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "takeN"
        }
      ]
    },
    {
      "definitionName": "takeUpTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Dequeue",
          "name": "takeUpTo"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Dequeue.Ops",
          "name": "takeUpTo"
        }
      ]
    },
    {
      "definitionName": "unbounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Queue.Ops",
          "name": "unbounded"
        }
      ]
    },
    {
      "definitionName": "unsafeOffer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Queue/Enqueue",
          "name": "unsafeOffer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Queue/Enqueue.Ops",
          "name": "unsafeOffer"
        }
      ]
    }
  ],
  "effect/Random": [
    {
      "definitionName": "Random",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Random"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Random.Ops"
        }
      ]
    },
    {
      "definitionName": "RandomTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Random.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Random.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "RandomTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Random.TypeId.Ops",
          "name": "RandomTypeId"
        }
      ]
    },
    {
      "definitionName": "next",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "next"
        }
      ]
    },
    {
      "definitionName": "nextBoolean",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "nextBoolean"
        }
      ]
    },
    {
      "definitionName": "nextInt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "nextInt"
        }
      ]
    },
    {
      "definitionName": "nextIntBetween",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Random.Ops",
          "name": "nextIntBetween"
        }
      ]
    },
    {
      "definitionName": "nextRange",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Random.Ops",
          "name": "nextRange"
        }
      ]
    },
    {
      "definitionName": "randomWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Random.Ops",
          "name": "randomWith"
        }
      ]
    },
    {
      "definitionName": "shuffle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "shuffle"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "shuffle"
        }
      ]
    }
  ],
  "effect/Ref": [
    {
      "definitionName": "Ref",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref.Ops"
        }
      ]
    },
    {
      "definitionName": "RefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "RefTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Ref.TypeId.Ops",
          "name": "RefTypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Ref",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "modifySome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "setAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "unsafeMake"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "update"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateSomeAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateSomeAndGet"
        }
      ]
    }
  ],
  "effect/Reloadable": [
    {
      "definitionName": "Reloadable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Reloadable"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Reloadable.Ops"
        }
      ]
    },
    {
      "definitionName": "ReloadableTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Reloadable.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Reloadable.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ReloadableTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.TypeId.Ops",
          "name": "ReloadableTypeId"
        }
      ]
    },
    {
      "definitionName": "auto",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "auto"
        }
      ]
    },
    {
      "definitionName": "autoFromConfig",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "autoFromConfig"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "manual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "manual"
        }
      ]
    },
    {
      "definitionName": "reload",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "reload"
        }
      ]
    },
    {
      "definitionName": "reloadFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "reloadFork"
        }
      ]
    },
    {
      "definitionName": "tag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Reloadable.Ops",
          "name": "tag"
        }
      ]
    }
  ],
  "effect/Request": [
    {
      "definitionName": "Cache",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request/Cache"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request/Cache.Ops"
        }
      ]
    },
    {
      "definitionName": "Entry",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request/Entry"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request/Entry.Ops"
        }
      ]
    },
    {
      "definitionName": "EntryTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request/EntryTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request/EntryTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Listeners",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request/Listeners"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request/Listeners.Ops"
        }
      ]
    },
    {
      "definitionName": "Request",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request.Ops"
        }
      ]
    },
    {
      "definitionName": "RequestTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Request.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Request.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "EntryTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request/EntryTypeId.Ops",
          "name": "EntryTypeId"
        }
      ]
    },
    {
      "definitionName": "RequestTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.TypeId.Ops",
          "name": "RequestTypeId"
        }
      ]
    },
    {
      "definitionName": "complete",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "complete"
        }
      ]
    },
    {
      "definitionName": "completeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "completeEffect"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "interruptWhenPossible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "interruptWhenPossible"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "interruptWhenPossible"
        }
      ]
    },
    {
      "definitionName": "isEntry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "isEntry"
        }
      ]
    },
    {
      "definitionName": "isRequest",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "isRequest"
        }
      ]
    },
    {
      "definitionName": "makeCache",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "makeCache"
        }
      ]
    },
    {
      "definitionName": "makeEntry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "makeEntry"
        }
      ]
    },
    {
      "definitionName": "of",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "of"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Request.Ops",
          "name": "tagged"
        }
      ]
    }
  ],
  "effect/RequestBlock": [
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestBlock/Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestBlock/Empty.Ops"
        }
      ]
    },
    {
      "definitionName": "Par",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestBlock/Par"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestBlock/Par.Ops"
        }
      ]
    },
    {
      "definitionName": "RequestBlock",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestBlock"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestBlock.Ops"
        }
      ]
    },
    {
      "definitionName": "Seq",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestBlock/Seq"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestBlock/Seq.Ops"
        }
      ]
    },
    {
      "definitionName": "Single",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestBlock/Single"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestBlock/Single.Ops"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "locally"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "locally"
        }
      ]
    },
    {
      "definitionName": "mapInputContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "mapInputContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "mapInputContext"
        }
      ]
    },
    {
      "definitionName": "mapRequestResolvers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "mapRequestResolvers"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "mapRequestResolvers"
        }
      ]
    },
    {
      "definitionName": "parallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "parallel"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "parallel"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "sequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestBlock",
          "name": "sequential"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestBlock.Ops",
          "name": "sequential"
        }
      ]
    },
    {
      "definitionName": "single",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "single"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "single"
        }
      ]
    }
  ],
  "effect/RequestResolver": [
    {
      "definitionName": "RequestResolver",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestResolver"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestResolver.Ops"
        }
      ]
    },
    {
      "definitionName": "RequestResolverTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RequestResolver.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RequestResolver.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "RequestResolverTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.TypeId.Ops",
          "name": "RequestResolverTypeId"
        }
      ]
    },
    {
      "definitionName": "around",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "around"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "around"
        }
      ]
    },
    {
      "definitionName": "batchN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "batchN"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "batchN"
        }
      ]
    },
    {
      "definitionName": "contextFromEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RequestResolver",
          "name": "contextFromEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "contextFromEffect"
        }
      ]
    },
    {
      "definitionName": "contextFromServices",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/RequestResolver",
          "name": "contextFromServices"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "contextFromServices"
        }
      ]
    },
    {
      "definitionName": "eitherWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "eitherWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "eitherWith"
        }
      ]
    },
    {
      "definitionName": "fromFunction",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "fromFunction"
        }
      ]
    },
    {
      "definitionName": "fromFunctionBatched",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "fromFunctionBatched"
        }
      ]
    },
    {
      "definitionName": "fromFunctionEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "fromFunctionEffect"
        }
      ]
    },
    {
      "definitionName": "isRequestResolver",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "isRequestResolver"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "locally"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "locally"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeBatched",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "makeBatched"
        }
      ]
    },
    {
      "definitionName": "makeWithEntry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "makeWithEntry"
        }
      ]
    },
    {
      "definitionName": "mapInputContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "mapInputContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "mapInputContext"
        }
      ]
    },
    {
      "definitionName": "never",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "never"
        }
      ]
    },
    {
      "definitionName": "provideContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "provideContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "provideContext"
        }
      ]
    },
    {
      "definitionName": "race",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RequestResolver",
          "name": "race"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RequestResolver.Ops",
          "name": "race"
        }
      ]
    }
  ],
  "effect/Resource": [
    {
      "definitionName": "Resource",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Resource"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Resource.Ops"
        }
      ]
    },
    {
      "definitionName": "ResourceTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Resource.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Resource.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ResourceTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Resource.TypeId.Ops",
          "name": "ResourceTypeId"
        }
      ]
    },
    {
      "definitionName": "auto",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "auto"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "auto"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Resource",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Resource.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "manual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "manual"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "manual"
        }
      ]
    },
    {
      "definitionName": "refresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Resource",
          "name": "refresh"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Resource.Ops",
          "name": "refresh"
        }
      ]
    }
  ],
  "effect/Runtime": [
    {
      "definitionName": "AsyncFiberException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/AsyncFiberException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/AsyncFiberException.Ops"
        }
      ]
    },
    {
      "definitionName": "Cancel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/Cancel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/Cancel.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberFailure",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/FiberFailure"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/FiberFailure.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberFailureCauseId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/FiberFailureCauseId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/FiberFailureCauseId.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberFailureId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/FiberFailureId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/FiberFailureId.Ops"
        }
      ]
    },
    {
      "definitionName": "RunForkOptions",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime/RunForkOptions"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime/RunForkOptions.Ops"
        }
      ]
    },
    {
      "definitionName": "Runtime",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime.Ops"
        }
      ]
    },
    {
      "definitionName": "FiberFailureCauseId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime/FiberFailureCauseId.Ops",
          "name": "FiberFailureCauseId"
        }
      ]
    },
    {
      "definitionName": "FiberFailureId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime/FiberFailureId.Ops",
          "name": "FiberFailureId"
        }
      ]
    },
    {
      "definitionName": "defaultRuntime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "defaultRuntime"
        }
      ]
    },
    {
      "definitionName": "defaultRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "defaultRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "isAsyncFiberException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "isAsyncFiberException"
        }
      ]
    },
    {
      "definitionName": "isFiberFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "isFiberFailure"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeFiberFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "makeFiberFailure"
        }
      ]
    },
    {
      "definitionName": "runCallback",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runCallback"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runCallback"
        }
      ]
    },
    {
      "definitionName": "runFork",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runFork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runFork"
        }
      ]
    },
    {
      "definitionName": "runPromise",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runPromise"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runPromise"
        }
      ]
    },
    {
      "definitionName": "runPromiseExit",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runPromiseExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runPromiseExit"
        }
      ]
    },
    {
      "definitionName": "runSync",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runSync"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runSync"
        }
      ]
    },
    {
      "definitionName": "runSyncExit",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Runtime",
          "kind": "getter",
          "name": "runSyncExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Runtime.Ops",
          "name": "runSyncExit"
        }
      ]
    }
  ],
  "effect/RuntimeFlags": [
    {
      "definitionName": "RuntimeFlag",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops"
        }
      ]
    },
    {
      "definitionName": "RuntimeFlags",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RuntimeFlags"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RuntimeFlags.Ops"
        }
      ]
    },
    {
      "definitionName": "CooperativeYielding",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "CooperativeYielding"
        }
      ]
    },
    {
      "definitionName": "Interruption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "Interruption"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "None"
        }
      ]
    },
    {
      "definitionName": "OpSupervision",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "OpSupervision"
        }
      ]
    },
    {
      "definitionName": "RuntimeMetrics",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "RuntimeMetrics"
        }
      ]
    },
    {
      "definitionName": "WindDown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "WindDown"
        }
      ]
    },
    {
      "definitionName": "cooperativeYielding",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "cooperativeYielding"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "cooperativeYielding"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "diff"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "disable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "disable"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "disable"
        }
      ]
    },
    {
      "definitionName": "disableAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "disableAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "disableAll"
        }
      ]
    },
    {
      "definitionName": "enable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "enable"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "enable"
        }
      ]
    },
    {
      "definitionName": "enableAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "enableAll"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "enableAll"
        }
      ]
    },
    {
      "definitionName": "interruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "interruptible"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "interruptible"
        }
      ]
    },
    {
      "definitionName": "interruption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "interruption"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "interruption"
        }
      ]
    },
    {
      "definitionName": "isDisabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "isDisabled"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "isDisabled"
        }
      ]
    },
    {
      "definitionName": "isEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "isEnabled"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "isEnabled"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "opSupervision",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "opSupervision"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "opSupervision"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlags",
          "name": "render"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "render"
        }
      ]
    },
    {
      "definitionName": "runtimeMetrics",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "runtimeMetrics"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "runtimeMetrics"
        }
      ]
    },
    {
      "definitionName": "toSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlags",
          "name": "toSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "toSet"
        }
      ]
    },
    {
      "definitionName": "windDown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlags",
          "name": "windDown"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags.Ops",
          "name": "windDown"
        }
      ]
    }
  ],
  "effect/RuntimeFlagsPatch": [
    {
      "definitionName": "RuntimeFlagsPatch",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/RuntimeFlagsPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "andThen"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "both",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "both"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "both"
        }
      ]
    },
    {
      "definitionName": "disable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag",
          "name": "disable"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "disable"
        }
      ]
    },
    {
      "definitionName": "disabledSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "disabledSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "disabledSet"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "either"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "enable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag",
          "name": "enable"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlags/RuntimeFlag.Ops",
          "name": "enable"
        }
      ]
    },
    {
      "definitionName": "enabledSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "enabledSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "enabledSet"
        }
      ]
    },
    {
      "definitionName": "exclude",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "exclude"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "exclude"
        }
      ]
    },
    {
      "definitionName": "includes",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "includes"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "includes"
        }
      ]
    },
    {
      "definitionName": "inverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "inverse"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "inverse"
        }
      ]
    },
    {
      "definitionName": "isActive",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "isActive"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "isActive"
        }
      ]
    },
    {
      "definitionName": "isDisabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "isDisabled"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "isDisabled"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "isEnabled"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "isEnabled"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/RuntimeFlagsPatch",
          "name": "render"
        },
        {
          "kind": "static",
          "typeName": "effect/io/RuntimeFlagsPatch.Ops",
          "name": "render"
        }
      ]
    }
  ],
  "effect/Schedule": [
    {
      "definitionName": "Schedule",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.Ops"
        }
      ]
    },
    {
      "definitionName": "ScheduleDriver",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.Driver"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.Driver.Ops"
        }
      ]
    },
    {
      "definitionName": "ScheduleDriverTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.DriverTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.DriverTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ScheduleTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ScheduleDriverTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.DriverTypeId.Ops",
          "name": "ScheduleDriverTypeId"
        }
      ]
    },
    {
      "definitionName": "ScheduleTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.TypeId.Ops",
          "name": "ScheduleTypeId"
        }
      ]
    },
    {
      "definitionName": "addDelay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "addDelay"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "addDelay"
        }
      ]
    },
    {
      "definitionName": "addDelayEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "addDelayEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "addDelayEffect"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "/"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "andThen"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "andThenEither",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "%"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "andThenEither"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "andThenEither"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "as"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "asUnit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "bothInOut",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "**"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "bothInOut"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "bothInOut"
        }
      ]
    },
    {
      "definitionName": "check",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "check"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "check"
        }
      ]
    },
    {
      "definitionName": "checkEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "checkEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "checkEffect"
        }
      ]
    },
    {
      "definitionName": "collectAllInputs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectAllInputs"
        }
      ]
    },
    {
      "definitionName": "collectAllOutputs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "collectAllOutputs"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectAllOutputs"
        }
      ]
    },
    {
      "definitionName": "collectUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectUntil"
        }
      ]
    },
    {
      "definitionName": "collectUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectUntilEffect"
        }
      ]
    },
    {
      "definitionName": "collectWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectWhile"
        }
      ]
    },
    {
      "definitionName": "collectWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "collectWhileEffect"
        }
      ]
    },
    {
      "definitionName": "compose",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": ">>"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "compose"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "compose"
        }
      ]
    },
    {
      "definitionName": "count",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "count"
        }
      ]
    },
    {
      "definitionName": "dayOfMonth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "dayOfMonth"
        }
      ]
    },
    {
      "definitionName": "dayOfWeek",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "dayOfWeek"
        }
      ]
    },
    {
      "definitionName": "delayed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "delayed"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "delayed"
        }
      ]
    },
    {
      "definitionName": "delayedEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "delayedEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "delayedEffect"
        }
      ]
    },
    {
      "definitionName": "delayedSchedule",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "delayedSchedule"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "delayedSchedule"
        }
      ]
    },
    {
      "definitionName": "delays",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "delays"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "delays"
        }
      ]
    },
    {
      "definitionName": "driver",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "driver"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "driver"
        }
      ]
    },
    {
      "definitionName": "duration",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "duration"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "either"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "eitherWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "eitherWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "eitherWith"
        }
      ]
    },
    {
      "definitionName": "elapsed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "elapsed"
        }
      ]
    },
    {
      "definitionName": "ensuring",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "ensuring"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "ensuring"
        }
      ]
    },
    {
      "definitionName": "exponential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "exponential"
        }
      ]
    },
    {
      "definitionName": "fibonacci",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "fibonacci"
        }
      ]
    },
    {
      "definitionName": "fixed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "fixed"
        }
      ]
    },
    {
      "definitionName": "forever",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "forever"
        }
      ]
    },
    {
      "definitionName": "fromDelay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "fromDelay"
        }
      ]
    },
    {
      "definitionName": "fromDelays",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "fromDelays"
        }
      ]
    },
    {
      "definitionName": "fromFunction",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "fromFunction"
        }
      ]
    },
    {
      "definitionName": "hourOfDay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "hourOfDay"
        }
      ]
    },
    {
      "definitionName": "identity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "identity"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "&&"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "intersect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "intersect"
        }
      ]
    },
    {
      "definitionName": "intersectWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "intersectWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "intersectWith"
        }
      ]
    },
    {
      "definitionName": "jittered",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "jittered"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "jittered"
        }
      ]
    },
    {
      "definitionName": "jitteredWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "jitteredWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "jitteredWith"
        }
      ]
    },
    {
      "definitionName": "linear",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "linear"
        }
      ]
    },
    {
      "definitionName": "makeWithState",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "makeWithState"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapBoth"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapBoth"
        }
      ]
    },
    {
      "definitionName": "mapBothEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapBothEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapBothEffect"
        }
      ]
    },
    {
      "definitionName": "mapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapEffect"
        }
      ]
    },
    {
      "definitionName": "mapInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapInput"
        }
      ]
    },
    {
      "definitionName": "mapInputContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapInputContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapInputContext"
        }
      ]
    },
    {
      "definitionName": "mapInputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "mapInputEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "mapInputEffect"
        }
      ]
    },
    {
      "definitionName": "minuteOfHour",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "minuteOfHour"
        }
      ]
    },
    {
      "definitionName": "modifyDelay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "modifyDelay"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "modifyDelay"
        }
      ]
    },
    {
      "definitionName": "modifyDelayEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "modifyDelayEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "modifyDelayEffect"
        }
      ]
    },
    {
      "definitionName": "once",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "once"
        }
      ]
    },
    {
      "definitionName": "onDecision",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "onDecision"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "onDecision"
        }
      ]
    },
    {
      "definitionName": "passthrough",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "passthrough"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "passthrough"
        }
      ]
    },
    {
      "definitionName": "provideContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "provideContext"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "provideContext"
        }
      ]
    },
    {
      "definitionName": "provideService",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "provideService"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "provideService"
        }
      ]
    },
    {
      "definitionName": "recurs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurs"
        }
      ]
    },
    {
      "definitionName": "recurUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurUntil"
        }
      ]
    },
    {
      "definitionName": "recurUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurUntilEffect"
        }
      ]
    },
    {
      "definitionName": "recurUntilOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurUntilOption"
        }
      ]
    },
    {
      "definitionName": "recurUpTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurUpTo"
        }
      ]
    },
    {
      "definitionName": "recurWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurWhile"
        }
      ]
    },
    {
      "definitionName": "recurWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "recurWhileEffect"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "reduceEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "reduceEffect"
        }
      ]
    },
    {
      "definitionName": "repeatForever",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "repeatForever"
        }
      ]
    },
    {
      "definitionName": "repetitions",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "repetitions"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "repetitions"
        }
      ]
    },
    {
      "definitionName": "resetAfter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "resetAfter"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "resetAfter"
        }
      ]
    },
    {
      "definitionName": "resetWhen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "resetWhen"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "resetWhen"
        }
      ]
    },
    {
      "definitionName": "run",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "run"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "run"
        }
      ]
    },
    {
      "definitionName": "secondOfMinute",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "secondOfMinute"
        }
      ]
    },
    {
      "definitionName": "spaced",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "spaced"
        }
      ]
    },
    {
      "definitionName": "stop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "stop"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "tapInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "tapInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "tapInput"
        }
      ]
    },
    {
      "definitionName": "tapOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "tapOutput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "tapOutput"
        }
      ]
    },
    {
      "definitionName": "unfold",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "unfold"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "||"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "unionWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "unionWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "unionWith"
        }
      ]
    },
    {
      "definitionName": "untilInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "untilInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "untilInput"
        }
      ]
    },
    {
      "definitionName": "untilInputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "untilInputEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "untilInputEffect"
        }
      ]
    },
    {
      "definitionName": "untilOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "untilOutput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "untilOutput"
        }
      ]
    },
    {
      "definitionName": "untilOutputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "untilOutputEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "untilOutputEffect"
        }
      ]
    },
    {
      "definitionName": "upTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "upTo"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "upTo"
        }
      ]
    },
    {
      "definitionName": "whileInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "whileInput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "whileInput"
        }
      ]
    },
    {
      "definitionName": "whileInputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "whileInputEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "whileInputEffect"
        }
      ]
    },
    {
      "definitionName": "whileOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "whileOutput"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "whileOutput"
        }
      ]
    },
    {
      "definitionName": "whileOutputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "whileOutputEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "whileOutputEffect"
        }
      ]
    },
    {
      "definitionName": "windowed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "windowed"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "<"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "zipLeft"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": ">"
        },
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "zipRight"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Schedule",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Schedule.Ops",
          "name": "zipWith"
        }
      ]
    }
  ],
  "effect/ScheduleDecision": [
    {
      "definitionName": "Continue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleDecision/Continue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleDecision/Continue.Ops"
        }
      ]
    },
    {
      "definitionName": "Done",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleDecision/Done"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleDecision/Done.Ops"
        }
      ]
    },
    {
      "definitionName": "ScheduleDecision",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleDecision"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleDecision.Ops"
        }
      ]
    },
    {
      "definitionName": "continueWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScheduleInterval",
          "name": "continueWith"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "continueWith"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleDecision.Ops",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "isContinue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleDecision",
          "name": "isContinue"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleDecision.Ops",
          "name": "isContinue"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleDecision",
          "name": "isDone"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleDecision.Ops",
          "name": "isDone"
        }
      ]
    }
  ],
  "effect/ScheduleInterval": [
    {
      "definitionName": "Interval",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleInterval"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleInterval.Ops"
        }
      ]
    },
    {
      "definitionName": "IntervalTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleInterval/IntervalTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleInterval/IntervalTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "IntervalTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval/IntervalTypeId.Ops",
          "name": "IntervalTypeId"
        }
      ]
    },
    {
      "definitionName": "after",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "after"
        }
      ]
    },
    {
      "definitionName": "before",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "before"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "intersect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "intersect"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "isNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "lessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "max",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "max"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "max"
        }
      ]
    },
    {
      "definitionName": "min",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "min"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "min"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScheduleInterval",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleInterval",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleInterval.Ops",
          "name": "union"
        }
      ]
    }
  ],
  "effect/ScheduleIntervals": [
    {
      "definitionName": "Intervals",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleIntervals"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleIntervals.Ops"
        }
      ]
    },
    {
      "definitionName": "IntervalsTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScheduleIntervals/IntervalsTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScheduleIntervals/IntervalsTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "IntervalsTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals/IntervalsTypeId.Ops",
          "name": "IntervalsTypeId"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "end",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "end"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "end"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "intersect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "intersect"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "isNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "lessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "max",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "max"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "max"
        }
      ]
    },
    {
      "definitionName": "start",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "start"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "start"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScheduleIntervals",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScheduleIntervals.Ops",
          "name": "union"
        }
      ]
    }
  ],
  "effect/Scheduler": [
    {
      "definitionName": "Scheduler",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler.Ops"
        }
      ]
    },
    {
      "definitionName": "Task",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler/Task"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler/Task.Ops"
        }
      ]
    },
    {
      "definitionName": "ControlledScheduler",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler/ControlledScheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler/ControlledScheduler.Ops"
        }
      ]
    },
    {
      "definitionName": "MixedScheduler",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler/MixedScheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler/MixedScheduler.Ops"
        }
      ]
    },
    {
      "definitionName": "PriorityBuckets",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler/PriorityBuckets"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler/PriorityBuckets.Ops"
        }
      ]
    },
    {
      "definitionName": "SyncScheduler",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler/SyncScheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler/SyncScheduler.Ops"
        }
      ]
    },
    {
      "definitionName": "currentScheduler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/FiberRef.Ops",
          "name": "currentScheduler"
        }
      ]
    },
    {
      "definitionName": "defaultScheduler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "defaultScheduler"
        }
      ]
    },
    {
      "definitionName": "defaultShouldYield",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/RuntimeFiber",
          "name": "defaultShouldYield"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Fiber/RuntimeFiber.Ops",
          "name": "defaultShouldYield"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeBatched",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "makeBatched"
        }
      ]
    },
    {
      "definitionName": "makeMatrix",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "makeMatrix"
        }
      ]
    },
    {
      "definitionName": "timer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "timer"
        }
      ]
    },
    {
      "definitionName": "timerBatched",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scheduler.Ops",
          "name": "timerBatched"
        }
      ]
    }
  ],
  "effect/Scope": [
    {
      "definitionName": "CloseableScope",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope/CloseableScope"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope/CloseableScope.Ops"
        }
      ]
    },
    {
      "definitionName": "CloseableScopeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope/CloseableScopeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope/CloseableScopeTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "Scope",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "CloseableScopeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scope/CloseableScopeTypeId.Ops",
          "name": "CloseableScopeTypeId"
        }
      ]
    },
    {
      "definitionName": "ScopeTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scope.TypeId.Ops",
          "name": "ScopeTypeId"
        }
      ]
    },
    {
      "definitionName": "addFinalizer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Scope",
          "name": "addFinalizer"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Scope.Ops",
          "name": "addFinalizer"
        }
      ]
    },
    {
      "definitionName": "addFinalizerExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Scope",
          "name": "addFinalizerExit"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Scope.Ops",
          "name": "addFinalizerExit"
        }
      ]
    },
    {
      "definitionName": "close",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Scope/CloseableScope",
          "name": "close"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Scope/CloseableScope.Ops",
          "name": "close"
        }
      ]
    },
    {
      "definitionName": "extend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "extend"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "extend"
        }
      ]
    },
    {
      "definitionName": "fork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Scope",
          "name": "fork"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Scope.Ops",
          "name": "fork"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Scope.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "use",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "use"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Effect.Ops",
          "name": "use"
        }
      ]
    }
  ],
  "effect/ScopedCache": [
    {
      "definitionName": "Lookup",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedCache/Lookup"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedCache/Lookup.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopedCache",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedCache"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedCache.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopedCacheTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedCache.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedCache.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopedCacheTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedCache.TypeId.Ops",
          "name": "ScopedCacheTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedCache.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedCache.Ops",
          "name": "makeWith"
        }
      ]
    }
  ],
  "effect/ScopedRef": [
    {
      "definitionName": "ScopedRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedRef.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopedRefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedRef.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedRef.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ScopedRefTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedRef.TypeId.Ops",
          "name": "ScopedRefTypeId"
        }
      ]
    },
    {
      "definitionName": "fromAcquire",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedRef.Ops",
          "name": "fromAcquire"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScopedRef",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScopedRef.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/ScopedRef.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/ScopedRef",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/io/ScopedRef.Ops",
          "name": "set"
        }
      ]
    }
  ],
  "effect/Supervisor": [
    {
      "definitionName": "Supervisor",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Supervisor"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Supervisor.Ops"
        }
      ]
    },
    {
      "definitionName": "SupervisorTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Supervisor.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Supervisor.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "AbstractSupervisor",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Supervisor/AbstractSupervisor"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Supervisor/AbstractSupervisor.Ops"
        }
      ]
    },
    {
      "definitionName": "SupervisorTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.TypeId.Ops",
          "name": "SupervisorTypeId"
        }
      ]
    },
    {
      "definitionName": "addSupervisor",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Supervisor",
          "name": "addSupervisor"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "addSupervisor"
        }
      ]
    },
    {
      "definitionName": "fibersIn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "fibersIn"
        }
      ]
    },
    {
      "definitionName": "fromEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "fromEffect"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "track",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "track"
        }
      ]
    },
    {
      "definitionName": "unsafeTrack",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Supervisor.Ops",
          "name": "unsafeTrack"
        }
      ]
    }
  ],
  "effect/SynchronizedRef": [
    {
      "definitionName": "SynchronizedRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/SynchronizedRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/SynchronizedRef.Ops"
        }
      ]
    },
    {
      "definitionName": "SynchronizedRefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/SynchronizedRef.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/SynchronizedRef.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "SynchronizedRefTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.TypeId.Ops",
          "name": "SynchronizedRefTypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/SynchronizedRef",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndSet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "getAndUpdateEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "getAndUpdateEffect"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "getAndUpdateSomeEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "getAndUpdateSomeEffect"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "modifyEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "modifyEffect"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "modifySome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "modifySomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "modifySomeEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "modifySomeEffect"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "setAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "unsafeMake",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "unsafeMake"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "update"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "updateAndGetEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "updateAndGetEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "updateAndGetEffect"
        }
      ]
    },
    {
      "definitionName": "updateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "updateEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "updateEffect"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateSome"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Ref",
          "name": "updateSomeAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/io/Ref.Ops",
          "name": "updateSomeAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGetEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "updateSomeAndGetEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "updateSomeAndGetEffect"
        }
      ]
    },
    {
      "definitionName": "updateSomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/SynchronizedRef",
          "name": "updateSomeEffect"
        },
        {
          "kind": "static",
          "typeName": "effect/io/SynchronizedRef.Ops",
          "name": "updateSomeEffect"
        }
      ]
    }
  ],
  "effect/Tracer": [
    {
      "definitionName": "AttributeValue",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/AttributeValue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/AttributeValue.Ops"
        }
      ]
    },
    {
      "definitionName": "ExternalSpan",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/ExternalSpan"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/ExternalSpan.Ops"
        }
      ]
    },
    {
      "definitionName": "ParentSpan",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/ParentSpan"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/ParentSpan.Ops"
        }
      ]
    },
    {
      "definitionName": "Span",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/Span"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/Span.Ops"
        }
      ]
    },
    {
      "definitionName": "SpanLink",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/SpanLink"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/SpanLink.Ops"
        }
      ]
    },
    {
      "definitionName": "SpanStatus",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer/SpanStatus"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer/SpanStatus.Ops"
        }
      ]
    },
    {
      "definitionName": "Tracer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer.Ops"
        }
      ]
    },
    {
      "definitionName": "TracerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "TracerTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Tracer.TypeId.Ops",
          "name": "TracerTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Tracer.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "tracerWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/io/Tracer.Ops",
          "name": "tracerWith"
        }
      ]
    }
  ]
}