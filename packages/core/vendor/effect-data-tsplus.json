{
  "@effect/data/Brand": [
    {
      "definitionName": "all",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "all"
        }
      ]
    },
    {
      "definitionName": "Brand",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Brand"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Brand.Ops"
        }
      ]
    },
    {
      "definitionName": "BrandTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Brand.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Brand.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "BrandTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.TypeId.Ops",
          "name": "BrandTypeId"
        }
      ]
    },
    {
      "definitionName": "error",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "error"
        }
      ]
    },
    {
      "definitionName": "errors",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "errors"
        }
      ]
    },
    {
      "definitionName": "isNominal",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "isNominal"
        }
      ]
    },
    {
      "definitionName": "isRefined",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "isRefined"
        }
      ]
    },
    {
      "definitionName": "nominal",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "nominal"
        }
      ]
    },
    {
      "definitionName": "NominalConstructorTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Brand/NominalConstructorTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Brand/NominalConstructorTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "NominalConstructorTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand/NominalConstructorTypeId.Ops",
          "name": "NominalConstructorTypeId"
        }
      ]
    },
    {
      "definitionName": "refined",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand.Ops",
          "name": "refined"
        }
      ]
    },
    {
      "definitionName": "RefinedConstructorsTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Brand/RefinedConstructorsTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Brand/RefinedConstructorsTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "RefinedConstructorsTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Brand/RefinedConstructorsTypeId.Ops",
          "name": "RefinedConstructorsTypeId"
        }
      ]
    }
  ],
  "@effect/data/Chunk": [
    {
      "definitionName": "append",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable-operator",
          "name": "<<"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "append"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "append"
        }
      ]
    },
    {
      "definitionName": "Chunk",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Chunk"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Chunk.Ops"
        }
      ]
    },
    {
      "definitionName": "chunksOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "chunksOf"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "chunksOf"
        }
      ]
    },
    {
      "definitionName": "ChunkTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Chunk.TypeLambda"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Chunk.TypeLambda.Ops"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "getter",
          "name": "compact"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "concat",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable-operator",
          "name": "+"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "concat"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "concat"
        }
      ]
    },
    {
      "definitionName": "correspondsTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "correspondsTo"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "correspondsTo"
        }
      ]
    },
    {
      "definitionName": "cross",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "cross"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "cross"
        }
      ]
    },
    {
      "definitionName": "crossWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "crossWith"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "crossWith"
        }
      ]
    },
    {
      "definitionName": "dedupe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "dedupe"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "dedupe"
        }
      ]
    },
    {
      "definitionName": "dedupeAdjacent",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "dedupeAdjacent"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "dedupeAdjacent"
        }
      ]
    },
    {
      "definitionName": "drop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "drop"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "drop"
        }
      ]
    },
    {
      "definitionName": "dropRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "dropRight"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "dropRight"
        }
      ]
    },
    {
      "definitionName": "dropWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "dropWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "dropWhile"
        }
      ]
    },
    {
      "definitionName": "elem",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "elem"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "elem"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "every"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable",
          "name": "filterMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "filterMapWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable",
          "name": "filterMap"
        },
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable",
          "name": "filterMapWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "filterMapWhile"
        }
      ]
    },
    {
      "definitionName": "filterMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable",
          "name": "filterMapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "filterMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "findFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "findFirstIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "findFirstIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "findFirstIndex"
        }
      ]
    },
    {
      "definitionName": "findLast",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "findLast"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "findLast"
        }
      ]
    },
    {
      "definitionName": "findLastIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "findLastIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "findLastIndex"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "flatten"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "head"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "headNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk/NonEmptyChunk",
          "name": "headNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk/NonEmptyChunk.Aspects",
          "name": "headNonEmpty"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "intersection"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "isChunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "isChunk"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/Chunk",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/Chunk",
          "name": "isNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "join",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "join"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "join"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "last"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "makeBy",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "makeBy"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapAccum",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "mapAccum"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "mapAccum"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "mapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "modifyOption"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "modifyOption"
        }
      ]
    },
    {
      "definitionName": "NonEmptyChunk",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Chunk/NonEmptyChunk"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Chunk/NonEmptyChunk.Ops"
        }
      ]
    },
    {
      "definitionName": "of",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "of"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "partition"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "partitionMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "partitionMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "partitionMap"
        }
      ]
    },
    {
      "definitionName": "partitionWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "partitionWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "partitionWithIndex"
        }
      ]
    },
    {
      "definitionName": "prepend",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Chunk",
          "kind": "pipeable-operator",
          "name": ">>"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "prepend"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "prepend"
        }
      ]
    },
    {
      "definitionName": "prependAllNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "prependAllNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "prependAllNonEmpty"
        }
      ]
    },
    {
      "definitionName": "range",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "range"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "reduceRight"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reduceRightWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "reduceRightWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "reduceRightWithIndex"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "reduceWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "replace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "replace"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "replace"
        }
      ]
    },
    {
      "definitionName": "replaceOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "replaceOption"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "replaceOption"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "reverse"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "reverse"
        }
      ]
    },
    {
      "definitionName": "separate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "separate"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "separate"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "some"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "sort",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "sort"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "sort"
        }
      ]
    },
    {
      "definitionName": "split",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "split"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "split"
        }
      ]
    },
    {
      "definitionName": "splitAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "splitAt"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "splitAt"
        }
      ]
    },
    {
      "definitionName": "splitWhere",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "splitWhere"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "splitWhere"
        }
      ]
    },
    {
      "definitionName": "tail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "tail"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "tail"
        }
      ]
    },
    {
      "definitionName": "tailNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk/NonEmptyChunk",
          "name": "tailNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk/NonEmptyChunk.Aspects",
          "name": "tailNonEmpty"
        }
      ]
    },
    {
      "definitionName": "take",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "take"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "take"
        }
      ]
    },
    {
      "definitionName": "takeRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "takeRight"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "takeRight"
        }
      ]
    },
    {
      "definitionName": "takeWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "takeWhile"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "takeWhile"
        }
      ]
    },
    {
      "definitionName": "toReadonlyArray",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "toReadonlyArray"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "toReadonlyArray"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Chunk/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Chunk/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "unfold",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "unfold"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "unsafeFromArray",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Ops",
          "name": "unsafeFromArray"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "unsafeGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "unsafeHead",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "unsafeHead"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "unsafeHead"
        }
      ]
    },
    {
      "definitionName": "unsafeLast",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "unsafeLast"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "unsafeLast"
        }
      ]
    },
    {
      "definitionName": "unzip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "unzip"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "unzip"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "zipAll"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zipAll"
        }
      ]
    },
    {
      "definitionName": "zipAllWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "zipAllWith"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zipAllWith"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "zipWith"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "zipWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Chunk",
          "name": "zipWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zipWithIndex"
        }
      ]
    },
    {
      "definitionName": "zipWithIndexOffset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Chunk",
          "name": "zipWithIndexOffset"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Chunk.Aspects",
          "name": "zipWithIndexOffset"
        }
      ]
    }
  ],
  "@effect/data/Context": [
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "Context",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Context"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Context.Ops"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "getOption"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Aspects",
          "name": "getOption"
        }
      ]
    },
    {
      "definitionName": "isContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "isContext"
        }
      ]
    },
    {
      "definitionName": "isTag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "isTag"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "merge"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Aspects",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "prune",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "prune"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Aspects",
          "name": "prune"
        }
      ]
    },
    {
      "definitionName": "Tag",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Context/Tag"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Context/Tag.Ops"
        }
      ]
    },
    {
      "definitionName": "Tag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Context.Ops",
          "name": "Tag"
        }
      ]
    },
    {
      "definitionName": "Tags",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Context/Tags"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Context/Tags.Ops"
        }
      ]
    },
    {
      "definitionName": "TagTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Context/TagTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Context/TagTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Context/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Context/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Context",
          "name": "unsafeGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Context.Aspects",
          "name": "unsafeGet"
        }
      ]
    }
  ],
  "@effect/data/Data": [
    {
      "definitionName": "array",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "array"
        }
      ]
    },
    {
      "definitionName": "Case",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Data/Case"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Data/Case.Ops"
        }
      ]
    },
    {
      "definitionName": "Data",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Data"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Data.Ops"
        }
      ]
    },
    {
      "definitionName": "struct",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "struct"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "tagged"
        }
      ]
    },
    {
      "definitionName": "tuple",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "tuple"
        }
      ]
    },
    {
      "definitionName": "unsafeArray",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "unsafeArray"
        }
      ]
    },
    {
      "definitionName": "unsafeStruct",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Data.Ops",
          "name": "unsafeStruct"
        }
      ]
    }
  ],
  "@effect/data/Differ": [
    {
      "definitionName": "chunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Differ",
          "name": "chunk"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "chunk"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "diff"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "Differ",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ.Ops"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Differ",
          "name": "empty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "environment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Ops",
          "name": "environment"
        }
      ]
    },
    {
      "definitionName": "hashMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/Differ",
          "name": "hashMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "hashMap"
        }
      ]
    },
    {
      "definitionName": "hashSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Ops",
          "name": "hashSet"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "orElseResult",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "orElseResult"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "orElseResult"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "transform",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "transform"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "transform"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Ops",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Ops",
          "name": "updateWith"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ",
          "name": "zip"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ.Aspects",
          "name": "zip"
        }
      ]
    }
  ],
  "@effect/data/Differ/ChunkPatch": [
    {
      "definitionName": "ChunkPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/ChunkPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/ChunkPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/ChunkPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ChunkPatch.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ChunkPatch.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ChunkPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/ChunkPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ChunkPatch.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/ChunkPatch/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/ChunkPatch/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/Differ/ContextPatch": [
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/ContextPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ContextPatch.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "ContextPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/ContextPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/ContextPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ContextPatch.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ContextPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/ContextPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/ContextPatch.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/ContextPatch/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/ContextPatch/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/Differ/HashMapPatch": [
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/HashMapPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashMapPatch.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashMapPatch.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashMapPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "HashMapPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/HashMapPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/HashMapPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/HashMapPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashMapPatch.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/HashMapPatch/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/HashMapPatch/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/Differ/HashSetPatch": [
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/HashSetPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashSetPatch.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashSetPatch.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashSetPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "HashSetPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/HashSetPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/HashSetPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/HashSetPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/HashSetPatch.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/HashSetPatch/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/HashSetPatch/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/Differ/OrPatch": [
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/OrPatch",
          "name": "combine"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/OrPatch.Aspects",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/OrPatch.Ops",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Differ/OrPatch.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "OrPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/OrPatch"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/OrPatch.Ops"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Differ/OrPatch",
          "name": "patch"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Differ/OrPatch.Aspects",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Differ/OrPatch/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Differ/OrPatch/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/Duration": [
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": "+"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "days",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "days"
        }
      ]
    },
    {
      "definitionName": "Duration",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Duration"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Duration.Ops"
        }
      ]
    },
    {
      "definitionName": "equals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "equals"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "equals"
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": ">"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "greaterThan"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "greaterThan"
        }
      ]
    },
    {
      "definitionName": "greaterThanOrEqualTo",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": ">="
        },
        {
          "kind": "fluent",
          "typeName": "effect/data/Duration",
          "name": "greaterThanOrEqualTo"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "greaterThanOrEqualTo"
        }
      ]
    },
    {
      "definitionName": "hours",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "hours"
        }
      ]
    },
    {
      "definitionName": "infinity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "infinity"
        }
      ]
    },
    {
      "definitionName": "isDuration",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "isDuration"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": "<"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "lessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "lessThanOrEqualTo",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": "<="
        },
        {
          "kind": "fluent",
          "typeName": "effect/data/Duration",
          "name": "lessThanOrEqualTo"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "lessThanOrEqualTo"
        }
      ]
    },
    {
      "definitionName": "millis",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "millis"
        }
      ]
    },
    {
      "definitionName": "minutes",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "minutes"
        }
      ]
    },
    {
      "definitionName": "seconds",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "seconds"
        }
      ]
    },
    {
      "definitionName": "subtract",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": "-"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "subtract"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "subtract"
        }
      ]
    },
    {
      "definitionName": "times",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/Duration",
          "kind": "pipeable-operator",
          "name": "*"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/Duration",
          "name": "times"
        },
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Aspects",
          "name": "times"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Duration/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Duration/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "weeks",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "weeks"
        }
      ]
    },
    {
      "definitionName": "zero",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Duration.Ops",
          "name": "zero"
        }
      ]
    }
  ],
  "@effect/data/Equal": [
    {
      "definitionName": "Equal",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Equal"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Equal.Ops"
        }
      ]
    },
    {
      "definitionName": "equals",
      "definitionKind": "function",
      "extensions": [
        {
          "typeName": "effect/data/Equal",
          "kind": "operator",
          "name": "=="
        },
        {
          "typeName": "ReadonlyArray",
          "kind": "operator",
          "name": "=="
        },
        {
          "typeName": "effect/data/Duration",
          "kind": "operator",
          "name": "=="
        },
        {
          "typeName": "fp-ts/core/Either",
          "kind": "operator",
          "name": "=="
        },
        {
          "typeName": "fp-ts/core/Option",
          "kind": "operator",
          "name": "=="
        },
        {
          "kind": "static",
          "typeName": "effect/data/Equal.Ops",
          "name": "equals"
        }
      ]
    },
    {
      "definitionName": "equivalence",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Equal.Ops",
          "name": "equivalence"
        }
      ]
    },
    {
      "definitionName": "isEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Equal.Ops",
          "name": "isEqual"
        }
      ]
    },
    {
      "definitionName": "symbol",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Equal/symbol.Ops",
          "name": "symbol"
        }
      ]
    }
  ],
  "@effect/data/Gen": [
    {
      "definitionName": "Adapter",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen/Adapter"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen/Adapter.Ops"
        }
      ]
    },
    {
      "definitionName": "Either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "Either"
        }
      ]
    },
    {
      "definitionName": "Either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "Either"
        }
      ]
    },
    {
      "definitionName": "Gen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen.Ops"
        }
      ]
    },
    {
      "definitionName": "GenKind",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen.Kind"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen.Kind.Ops"
        }
      ]
    },
    {
      "definitionName": "GenKindImpl",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen.KindImpl"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen.KindImpl.Ops"
        }
      ]
    },
    {
      "definitionName": "GenKindTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen.KindTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen.KindTypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "GenKindTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.KindTypeId.Ops",
          "name": "GenKindTypeId"
        }
      ]
    },
    {
      "definitionName": "makeGenKind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Kind.Ops",
          "name": "makeGenKind"
        }
      ]
    },
    {
      "definitionName": "Option",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "Option"
        }
      ]
    },
    {
      "definitionName": "Option",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "Option"
        }
      ]
    },
    {
      "definitionName": "singleShot",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "singleShot"
        }
      ]
    },
    {
      "definitionName": "SingleShotGen",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen/SingleShotGen"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen/SingleShotGen.Ops"
        }
      ]
    },
    {
      "definitionName": "These",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "These"
        }
      ]
    },
    {
      "definitionName": "These",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Gen.Ops",
          "name": "These"
        }
      ]
    },
    {
      "definitionName": "Variance",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Gen/Variance"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Gen/Variance.Ops"
        }
      ]
    }
  ],
  "@effect/data/Hash": [
    {
      "definitionName": "array",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "array"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "hash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "hash"
        }
      ]
    },
    {
      "definitionName": "Hash",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Hash"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Hash.Ops"
        }
      ]
    },
    {
      "definitionName": "isHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "isHash"
        }
      ]
    },
    {
      "definitionName": "number",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "number"
        }
      ]
    },
    {
      "definitionName": "optimize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "optimize"
        }
      ]
    },
    {
      "definitionName": "random",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "random"
        }
      ]
    },
    {
      "definitionName": "string",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "string"
        }
      ]
    },
    {
      "definitionName": "structure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash.Ops",
          "name": "structure"
        }
      ]
    },
    {
      "definitionName": "symbol",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Hash/symbol.Ops",
          "name": "symbol"
        }
      ]
    }
  ],
  "@effect/data/HashMap": [
    {
      "definitionName": "beginMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "beginMutation"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "beginMutation"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "compact"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "endMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "endMutation"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "endMutation"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "filterMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "filterMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "filterMapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "filterMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "filterWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "filterWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "filterWithIndex"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "flatMapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "flatMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forEachWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "forEachWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "forEachWithIndex"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "getHash"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "getHash"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "hasHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "hasHash"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "hasHash"
        }
      ]
    },
    {
      "definitionName": "HashMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/HashMap"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/HashMap.Ops"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/HashMap",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isHashMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Ops",
          "name": "isHashMap"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "keys"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "keySet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "keySet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "keySet"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/HashMap.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "mapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "modifyAt"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "modifyAt"
        }
      ]
    },
    {
      "definitionName": "modifyHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "modifyHash"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "modifyHash"
        }
      ]
    },
    {
      "definitionName": "mutate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "mutate"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "mutate"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "reduceWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "removeMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "removeMany"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "removeMany"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/HashMap/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/HashMap/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashMap",
          "name": "unsafeGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashMap",
          "name": "values"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashMap.Aspects",
          "name": "values"
        }
      ]
    }
  ],
  "@effect/data/HashSet": [
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "beginMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashSet",
          "name": "beginMutation"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "beginMutation"
        }
      ]
    },
    {
      "definitionName": "difference",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "difference"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "difference"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "endMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashSet",
          "name": "endMutation"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "endMutation"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "every"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "HashSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/HashSet"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/HashSet.Ops"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "intersection"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "isHashSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Ops",
          "name": "isHashSet"
        }
      ]
    },
    {
      "definitionName": "isSubset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "isSubset"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "isSubset"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/HashSet.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mutate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "mutate"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "mutate"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "partition"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashSet",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "some"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "toggle"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "toggle"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/HashSet/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/HashSet/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/HashSet",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/HashSet",
          "name": "values"
        },
        {
          "kind": "static",
          "typeName": "effect/data/HashSet.Aspects",
          "name": "values"
        }
      ]
    }
  ],
  "@effect/data/List": [
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "concat",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/List",
          "kind": "pipeable-operator",
          "name": "+"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "concat"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "concat"
        }
      ]
    },
    {
      "definitionName": "cons",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "cons"
        }
      ]
    },
    {
      "definitionName": "Cons",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/List/Cons"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/List/Cons.Ops"
        }
      ]
    },
    {
      "definitionName": "drop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "drop"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "drop"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "equalsWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "equalsWith"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "equalsWith"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "every"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "findFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "head"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "isCons",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/List",
          "name": "isCons"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "isCons"
        }
      ]
    },
    {
      "definitionName": "isList",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "isList"
        }
      ]
    },
    {
      "definitionName": "isNil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/List",
          "name": "isNil"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "isNil"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "last"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "length",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "length"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "length"
        }
      ]
    },
    {
      "definitionName": "List",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/List"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/List.Ops"
        }
      ]
    },
    {
      "definitionName": "ListTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/List.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/List.TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "ListTypeId",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.TypeId.Ops",
          "name": "ListTypeId"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "nil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "nil"
        }
      ]
    },
    {
      "definitionName": "Nil",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/List/Nil"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/List/Nil.Ops"
        }
      ]
    },
    {
      "definitionName": "of",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/List.Ops",
          "name": "of"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "partition"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "partitionMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "partitionMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "partitionMap"
        }
      ]
    },
    {
      "definitionName": "prepend",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/List",
          "kind": "pipeable-operator",
          "name": ">>"
        },
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "prepend"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "prepend"
        }
      ]
    },
    {
      "definitionName": "prependAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "prependAll"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "prependAll"
        }
      ]
    },
    {
      "definitionName": "prependAllReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "prependAllReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "prependAllReversed"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "reduceRight"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "reverse"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "reverse"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "some"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "splitAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "splitAt"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "splitAt"
        }
      ]
    },
    {
      "definitionName": "tail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "tail"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "tail"
        }
      ]
    },
    {
      "definitionName": "take",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/List",
          "name": "take"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "take"
        }
      ]
    },
    {
      "definitionName": "toChunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "toChunk"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "toChunk"
        }
      ]
    },
    {
      "definitionName": "toReadonlyArray",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "toReadonlyArray"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "toReadonlyArray"
        }
      ]
    },
    {
      "definitionName": "unsafeHead",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "unsafeHead"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "unsafeHead"
        }
      ]
    },
    {
      "definitionName": "unsafeLast",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "unsafeLast"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "unsafeLast"
        }
      ]
    },
    {
      "definitionName": "unsafeTail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/List",
          "name": "unsafeTail"
        },
        {
          "kind": "static",
          "typeName": "effect/data/List.Aspects",
          "name": "unsafeTail"
        }
      ]
    }
  ],
  "@effect/data/MutableHashMap": [
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/MutableHashMap.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "modify"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "modifyAt"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "modifyAt"
        }
      ]
    },
    {
      "definitionName": "MutableHashMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableHashMap"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableHashMap.Ops"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashMap",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableHashMap",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashMap.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableHashMap/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableHashMap/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/MutableHashSet": [
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashSet",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Aspects",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashSet",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/MutableHashSet.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "MutableHashSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableHashSet"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableHashSet.Ops"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableHashSet",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableHashSet",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableHashSet.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableHashSet/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableHashSet/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/MutableList": [
    {
      "definitionName": "append",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableList",
          "name": "append"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "append"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Ops",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableList",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "from",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Ops",
          "name": "from"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "head"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/MutableList",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "length",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "length"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "length"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "MutableList",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableList"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableList.Ops"
        }
      ]
    },
    {
      "definitionName": "pop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "pop"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "pop"
        }
      ]
    },
    {
      "definitionName": "reset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "reset"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "reset"
        }
      ]
    },
    {
      "definitionName": "shift",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "shift"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "shift"
        }
      ]
    },
    {
      "definitionName": "tail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableList",
          "name": "tail"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableList.Aspects",
          "name": "tail"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableList/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableList/TypeId.Ops"
        }
      ]
    }
  ],
  "@effect/data/MutableQueue": [
    {
      "definitionName": "bounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Ops",
          "name": "bounded"
        }
      ]
    },
    {
      "definitionName": "capacity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableQueue",
          "name": "capacity"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "capacity"
        }
      ]
    },
    {
      "definitionName": "EmptyMutableQueue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue/EmptyMutableQueue.Ops",
          "name": "EmptyMutableQueue"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/MutableQueue",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isFull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/MutableQueue",
          "name": "isFull"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "isFull"
        }
      ]
    },
    {
      "definitionName": "length",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableQueue",
          "name": "length"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "length"
        }
      ]
    },
    {
      "definitionName": "MutableQueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableQueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableQueue.Ops"
        }
      ]
    },
    {
      "definitionName": "offer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/MutableQueue",
          "name": "offer"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "offer"
        }
      ]
    },
    {
      "definitionName": "offerAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableQueue",
          "name": "offerAll"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "offerAll"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableQueue",
          "name": "poll"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pollUpTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableQueue",
          "name": "pollUpTo"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Aspects",
          "name": "pollUpTo"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableQueue/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableQueue/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "unbounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/MutableQueue.Ops",
          "name": "unbounded"
        }
      ]
    }
  ],
  "@effect/data/MutableRef": [
    {
      "definitionName": "compareAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "compareAndSet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "compareAndSet"
        }
      ]
    },
    {
      "definitionName": "decrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "decrement"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "decrement"
        }
      ]
    },
    {
      "definitionName": "decrementAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "decrementAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "decrementAndGet"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getAndDecrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "getAndDecrement"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "getAndDecrement"
        }
      ]
    },
    {
      "definitionName": "getAndIncrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "getAndIncrement"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "getAndIncrement"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "getAndSet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "getAndUpdate"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "increment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "increment"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "increment"
        }
      ]
    },
    {
      "definitionName": "incrementAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "incrementAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "incrementAndGet"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/MutableRef.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "MutableRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableRef.Ops"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "setAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/MutableRef",
          "name": "toggle"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "toggle"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/MutableRef/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/MutableRef/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "update"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/MutableRef",
          "name": "updateAndGet"
        },
        {
          "kind": "static",
          "typeName": "effect/data/MutableRef.Aspects",
          "name": "updateAndGet"
        }
      ]
    }
  ],
  "@effect/data/NonEmpty": [
    {
      "definitionName": "nonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/NonEmpty/nonEmpty.Ops",
          "name": "nonEmpty"
        }
      ]
    },
    {
      "definitionName": "NonEmptyIterable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/NonEmpty.Iterable"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/NonEmpty.Iterable.Ops"
        }
      ]
    },
    {
      "definitionName": "unprepend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/NonEmpty.Iterable",
          "name": "unprepend"
        },
        {
          "kind": "static",
          "typeName": "effect/data/NonEmpty.Iterable.Aspects",
          "name": "unprepend"
        }
      ]
    }
  ],
  "@effect/data/Random": [
    {
      "definitionName": "isNothing",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/Random.Ops",
          "name": "isNothing"
        }
      ]
    },
    {
      "definitionName": "OptionalNumber",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Random/OptionalNumber"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Random/OptionalNumber.Ops"
        }
      ]
    },
    {
      "definitionName": "PCGRandom",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Random/PCGRandom"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Random/PCGRandom.Ops"
        }
      ]
    },
    {
      "definitionName": "PCGRandomState",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/Random/PCGRandomState"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/Random/PCGRandomState.Ops"
        }
      ]
    }
  ],
  "@effect/data/RedBlackTree": [
    {
      "definitionName": "at",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "at"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "at"
        }
      ]
    },
    {
      "definitionName": "atReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "atReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "atReversed"
        }
      ]
    },
    {
      "definitionName": "find",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "find"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "find"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "findFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "first",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "first"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "first"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forEachBetween",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "forEachBetween"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "forEachBetween"
        }
      ]
    },
    {
      "definitionName": "forEachGreaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "forEachGreaterThanEqual"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "forEachGreaterThanEqual"
        }
      ]
    },
    {
      "definitionName": "forEachLessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "forEachLessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "forEachLessThan"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "getAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "getAt"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "getAt"
        }
      ]
    },
    {
      "definitionName": "getOrder",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "getOrder"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "getOrder"
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "greaterThan"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "greaterThan"
        }
      ]
    },
    {
      "definitionName": "greaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "greaterThanEqual"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "greaterThanEqual"
        }
      ]
    },
    {
      "definitionName": "greaterThanEqualReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "greaterThanEqualReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "greaterThanEqualReversed"
        }
      ]
    },
    {
      "definitionName": "greaterThanReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "greaterThanReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "greaterThanReversed"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "insert",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "insert"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "insert"
        }
      ]
    },
    {
      "definitionName": "isRedBlackTree",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Ops",
          "name": "isRedBlackTree"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "keys"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "keysReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "keysReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "keysReversed"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "last"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "lessThan"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "lessThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "lessThanEqual"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "lessThanEqual"
        }
      ]
    },
    {
      "definitionName": "lessThanEqualReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "lessThanEqualReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "lessThanEqualReversed"
        }
      ]
    },
    {
      "definitionName": "lessThanReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "lessThanReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "lessThanReversed"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "RedBlackTree",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/RedBlackTree"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/RedBlackTree.Ops"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "reduceWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "removeFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/RedBlackTree",
          "name": "removeFirst"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "removeFirst"
        }
      ]
    },
    {
      "definitionName": "reversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "reversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "reversed"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/RedBlackTree/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/RedBlackTree/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "values"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "values"
        }
      ]
    },
    {
      "definitionName": "valuesReversed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/RedBlackTree",
          "name": "valuesReversed"
        },
        {
          "kind": "static",
          "typeName": "effect/data/RedBlackTree.Aspects",
          "name": "valuesReversed"
        }
      ]
    }
  ],
  "@effect/data/SortedMap": [
    {
      "definitionName": "entries",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "entries"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "entries"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "get"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getOrder",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "getOrder"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "getOrder"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "headOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "headOption"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "headOption"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/SortedMap",
          "name": "isEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/data/SortedMap",
          "name": "isNonEmpty"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "isSortedMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Ops",
          "name": "isSortedMap"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "keys"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "typeName": "effect/data/SortedMap.Ops",
          "kind": "static",
          "name": "__call"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "mapWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "reduce"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "reduceWithIndex"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedMap",
          "name": "set"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "SortedMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/SortedMap"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/SortedMap.Ops"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/SortedMap/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/SortedMap/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedMap",
          "name": "values"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedMap.Aspects",
          "name": "values"
        }
      ]
    }
  ],
  "@effect/data/SortedSet": [
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "add"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "difference",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "difference"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "difference"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "every"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "filter"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "flatMap"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "forEach"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "fromIterable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Ops",
          "name": "fromIterable"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "has"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "intersection"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "isSortedSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Ops",
          "name": "isSortedSet"
        }
      ]
    },
    {
      "definitionName": "isSubset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "isSubset"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "isSubset"
        }
      ]
    },
    {
      "definitionName": "make",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Ops",
          "name": "make"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "map"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "partition"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "remove"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedSet",
          "name": "size"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "some"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "SortedSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/SortedSet"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/SortedSet.Ops"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "toggle"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "toggle"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/data/SortedSet/TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/data/SortedSet/TypeId.Ops"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/data/SortedSet",
          "name": "union"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/data/SortedSet",
          "name": "values"
        },
        {
          "kind": "static",
          "typeName": "effect/data/SortedSet.Aspects",
          "name": "values"
        }
      ]
    }
  ]
}