{
    "extends": "./tsconfig.strictest.json",
    "compilerOptions": {
        "module": "Node16",
        "lib": [
            "esnext"
        ],
        "target": "es2021",
        // inline source maps stay better in sync with the source, which should aid with watchers.
        //"sourceMap": true,
        "inlineSourceMap": true,
        "incremental": true,
        "composite": true,
        "declarationMap": true,
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "noImplicitAny": true,
        "useUnknownInCatchVariables": true,
        // This is not desirable, as it's useful in generators.
        "noImplicitReturns": false,
        "noImplicitThis": true,
        "outDir": "build/dist",
        "resolveJsonModule": true,
        "moduleResolution": "Node16",
        "downlevelIteration": true,
        "noErrorTruncation": true,
        "ignoreDeprecations": "5.0",
        "forceConsistentCasingInFileNames": true,
        "tsPlusTypes": [
            "./node_modules/@effect-app/core/vendor/effect-data-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-io-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-match-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-stm-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-stream-tsplus.json",
            "./node_modules/@effect-app/core/vendor/fp-ts-optic-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-schema-tsplus.json",
            "./node_modules/@effect-app/core/vendor/effect-platform-tsplus.json",
        ],
        //"preserveSymlinks": true
        "plugins": [
            {
                "name": "@effect/language-service",
                "diagnostics": {
                    "1002": "none"
                }
            }
        ],
        "transformers": [
            {
                "name": "@effect/language-service/transformer",
                "trace": {
                    "exclude": [
                        "**/*.ts"
                    ]
                }
                //"debug": {}
            },
        ],
        "types": [
            "vitest/globals"
        ],
    },
    "watchOptions": {
        // Use native file system events for files and directories
        // This actually detect changes in parent directories ... not great!
        // however it seems that the response is very fast on the non-related projects figuring out their files are unchanged...
        "watchFile": "useFsEvents",
        "watchDirectory": "useFsEvents",
        //     // Poll files for updates more frequently
        //     // when they're updated a lot.
        "fallbackPolling": "dynamicPriority",
        "excludeDirectories": [
            "**/node_modules",
            "**/dist",
            "**/.build",
            "**/.git",
            "**/.data",
            "**/.logs",
            "**/.*",
        ],
        "excludeFiles": [
            "**/*.tmp",
            "openapi.json",
            "*.json"
        ]
    },
    "include": [],
    "exclude": [
        "**/node_modules",
        "**/build",
        "**/dist",
        "**/.*"
    ]
}